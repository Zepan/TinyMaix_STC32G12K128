C251 COMPILER V5.60.0,  tinymaix                                                           21/09/22  15:45:21  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE tinymaix
OBJECT MODULE PLACED IN .\Objects\tinymaix.obj
COMPILER INVOKED BY: D:\SDK\Keil_V5\C251\BIN\C251.EXE Sources\TinyMaix\tinymaix.c XSMALL OA FUNCTIONS(REENTRANT) INCDIR(
                    -.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\STC32G12K128) PRINT(.\Listi
                    -ngs\tinymaix.lst) TABS(2) OBJECT(.\Objects\tinymaix.obj) 

stmt  level    source

    1          /* Copyright 2022 Sipeed Technology Co., Ltd. All Rights Reserved.
    2          Licensed under the Apache License, Version 2.0 (the "License");
    3          you may not use this file except in compliance with the License.
    4          You may obtain a copy of the License at
    5              http://www.apache.org/licenses/LICENSE-2.0
    6          Unless required by applicable law or agreed to in writing, software
    7          distributed under the License is distributed on an "AS IS" BASIS,
    8          WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    9          See the License for the specific language governing permissions and
   10          limitations under the License.
   11          ==============================================================================*/
   12          
   13          #include "tinymaix.h"
   14          #include "DebugPrintf.h"
   15          #include "FreeRTOS.h"
   16          #include "stdio.h"
   17          #include "task.h"
   18          
   19          #define TM_GET_US() ((uint32_t)(micros()))
   20          
   21          #define TM_DBGT_INIT()                                                         \
*** WARNING C317 IN LINE 24 OF Sources\TinyMaix\tinymaix.c: attempt to redefine macro 'TM_DBGT_INIT'
   22            uint32_t _start, _finish;                                                    \
   23            uint32_t _time;                                                              \
   24            _start = TM_GET_US();
   25          #define TM_DBGT_START() _start = TM_GET_US();
*** WARNING C317 IN LINE 25 OF Sources\TinyMaix\tinymaix.c: attempt to redefine macro 'TM_DBGT_START'
   26          #define TM_DBGT(x)                                                             \
*** WARNING C317 IN LINE 34 OF Sources\TinyMaix\tinymaix.c: attempt to redefine macro 'TM_DBGT'
   27            {                                                                            \
   28              _finish = TM_GET_US();                                                     \
   29              _time = (_finish - _start);                                                \
   30              printf("===use ");                                                         \
   31              printf(_time);                                                             \
   32              printf("us\r\n");                                                            \
   33              _start = TM_GET_US();                                                      \
   34            }
   35          
   36          #include <stdint.h>
   37          #define MDL_BUF_LEN (960)
   38          #define LBUF_LEN (360)
   39          static const uint8_t mdl_data[] = {
   40              0x4d, 0x41, 0x49, 0x58, 0x00, 0x01, 0x01, 0x00, 0x01, 0x00, 0x06, 0x00,
   41              0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x1c, 0x00,
   42              0x1c, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a, 0x00,
   43              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   44              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   45              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
   46              0x00, 0x00, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x03, 0x00, 0x1c, 0x00,
   47              0x1c, 0x00, 0x01, 0x00, 0x03, 0x00, 0x0d, 0x00, 0x0d, 0x00, 0x01, 0x00,
   48              0x81, 0x80, 0x80, 0x3b, 0x80, 0xff, 0xff, 0xff, 0x68, 0x9d, 0x6b, 0x3c,
   49              0x80, 0xff, 0xff, 0xff, 0x03, 0x03, 0x02, 0x02, 0x01, 0x01, 0x01, 0x00,
   50              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   51              0x50, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
   52              0xb8, 0xfc, 0x51, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x50, 0x7f, 0x30, 0xed,
   53              0x10, 0x17, 0x9b, 0xc8, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   54              0xc4, 0x3d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
C251 COMPILER V5.60.0,  tinymaix                                                           21/09/22  15:45:21  PAGE 2   

   55              0x90, 0x00, 0x00, 0x00, 0x10, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   56              0x03, 0x00, 0x0d, 0x00, 0x0d, 0x00, 0x01, 0x00, 0x03, 0x00, 0x06, 0x00,
   57              0x06, 0x00, 0x03, 0x00, 0x68, 0x9d, 0x6b, 0x3c, 0x80, 0xff, 0xff, 0xff,
   58              0x40, 0x47, 0x57, 0x3c, 0x80, 0xff, 0xff, 0xff, 0x03, 0x03, 0x02, 0x02,
   59              0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   60              0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
   61              0x80, 0x00, 0x00, 0x00, 0xa6, 0x15, 0xf4, 0x3b, 0x51, 0x1d, 0x45, 0x3b,
   62              0x98, 0x06, 0xcf, 0x3b, 0x00, 0x00, 0x00, 0x00, 0xea, 0x00, 0x03, 0x9a,
   63              0x81, 0xd0, 0xfb, 0x09, 0x09, 0x13, 0x47, 0x5a, 0xda, 0x4c, 0x7f, 0xf9,
   64              0x44, 0x56, 0x23, 0x16, 0x11, 0x24, 0x10, 0x09, 0x81, 0xc5, 0xd7, 0x00,
   65              0x00, 0x00, 0x00, 0x00, 0x08, 0x90, 0xff, 0xff, 0xc5, 0xfe, 0x00, 0x00,
   66              0x92, 0xe3, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   67              0x28, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa8, 0x03, 0x00, 0x00,
   68              0x03, 0x00, 0x06, 0x00, 0x06, 0x00, 0x03, 0x00, 0x03, 0x00, 0x02, 0x00,
   69              0x02, 0x00, 0x06, 0x00, 0x40, 0x47, 0x57, 0x3c, 0x80, 0xff, 0xff, 0xff,
   70              0xfe, 0xcd, 0x65, 0x3d, 0x80, 0xff, 0xff, 0xff, 0x03, 0x03, 0x02, 0x02,
   71              0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   72              0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
   73              0x10, 0x01, 0x00, 0x00, 0x18, 0xa6, 0x35, 0x3d, 0x64, 0xd6, 0xfd, 0x3c,
   74              0x16, 0x84, 0x37, 0x3d, 0x92, 0x5a, 0x07, 0x3d, 0xb7, 0xfa, 0xb2, 0x3c,
   75              0x7e, 0xd4, 0x13, 0x3d, 0xb0, 0x2a, 0xc4, 0x26, 0x2d, 0x00, 0xad, 0x81,
   76              0xe9, 0xfc, 0x0d, 0xf3, 0x10, 0x08, 0xec, 0xfa, 0x04, 0x06, 0x0d, 0x2f,
   77              0xde, 0x21, 0x0c, 0xef, 0x1e, 0xe7, 0x06, 0x81, 0xcd, 0xc2, 0xef, 0xf8,
   78              0x07, 0x04, 0xd2, 0xe2, 0x0f, 0x39, 0x40, 0xed, 0x05, 0x04, 0xfa, 0xd2,
   79              0xd1, 0xad, 0xdb, 0x15, 0x11, 0xdf, 0xf0, 0x0f, 0xf4, 0x0f, 0xf8, 0x14,
   80              0xde, 0x0e, 0x08, 0x17, 0x7f, 0x3a, 0x2a, 0x13, 0x0c, 0x02, 0xfd, 0x28,
   81              0x0f, 0x21, 0xec, 0xcd, 0xd3, 0x0a, 0x25, 0x33, 0x12, 0xf1, 0x45, 0x18,
   82              0x1a, 0xc4, 0xc1, 0xd9, 0xe8, 0x07, 0x01, 0x81, 0x00, 0x0c, 0xde, 0xb6,
   83              0x04, 0xd4, 0x12, 0x25, 0xf0, 0x43, 0x05, 0xd4, 0xd4, 0x09, 0xa7, 0x30,
   84              0x36, 0xb1, 0xef, 0x3b, 0x2b, 0xcf, 0x81, 0x14, 0x0d, 0xe9, 0xbc, 0xf9,
   85              0x03, 0x29, 0x5c, 0x57, 0xb6, 0xa6, 0xd0, 0xff, 0x22, 0x02, 0xd8, 0x04,
   86              0x16, 0xff, 0x08, 0xf1, 0xb4, 0xb9, 0x0a, 0x00, 0x14, 0x3d, 0xcc, 0xcc,
   87              0xde, 0xd3, 0xca, 0xdd, 0x41, 0x35, 0xf1, 0x9a, 0xa3, 0xc3, 0xe2, 0x09,
   88              0x27, 0xd1, 0xdd, 0x11, 0xe4, 0x81, 0xd5, 0xd6, 0xb5, 0xf0, 0x00, 0x00,
   89              0x00, 0x00, 0x00, 0x00, 0x25, 0xc3, 0xff, 0xff, 0x03, 0x81, 0xff, 0xff,
   90              0x00, 0xb7, 0x00, 0x00, 0x46, 0x73, 0xff, 0xff, 0xff, 0x9b, 0xff, 0xff,
   91              0x2d, 0x03, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00,
   92              0xa8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,
   93              0x02, 0x00, 0x06, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x06, 0x00,
   94              0xfe, 0xcd, 0x65, 0x3d, 0x80, 0xff, 0xff, 0xff, 0x11, 0xef, 0xc5, 0x3c,
   95              0x80, 0xff, 0xff, 0xff, 0x02, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00,
   96              0x00, 0x00, 0x00, 0x00, 0xb0, 0x03, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00,
   97              0x01, 0x00, 0x06, 0x00, 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a, 0x00,
   98              0x11, 0xef, 0xc5, 0x3c, 0x80, 0xff, 0xff, 0xff, 0x4f, 0x75, 0x1d, 0x3e,
   99              0x3f, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x68, 0x00, 0x00, 0x00,
  100              0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x85, 0xba, 0x05, 0x3d,
  101              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  102              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  103              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  104              0xb9, 0x0f, 0xcc, 0x08, 0x38, 0xf3, 0xc8, 0x1d, 0xd8, 0xa0, 0xd9, 0x44,
  105              0x13, 0x9b, 0x17, 0x04, 0x2f, 0xe9, 0xfa, 0xea, 0x27, 0xf6, 0x28, 0x90,
  106              0x28, 0xe6, 0x09, 0xee, 0x81, 0x31, 0xe6, 0xf8, 0x1b, 0x19, 0x0c, 0xda,
  107              0xd2, 0xc7, 0xb3, 0x2f, 0xc9, 0x23, 0x21, 0xfd, 0x25, 0xae, 0x19, 0xef,
  108              0xf3, 0x3a, 0xcf, 0x08, 0xe0, 0xc5, 0x29, 0x26, 0x0c, 0xd9, 0xb8, 0xdb,
  109              0x00, 0x00, 0x00, 0x00, 0x8c, 0xdf, 0xff, 0xff, 0x0d, 0xc7, 0xff, 0xff,
  110              0xb3, 0xf2, 0xff, 0xff, 0x40, 0xe2, 0xff, 0xff, 0x84, 0xd4, 0xff, 0xff,
  111              0xac, 0xf3, 0xff, 0xff, 0x86, 0xb5, 0xff, 0xff, 0x19, 0xf6, 0xff, 0xff,
  112              0x75, 0xdc, 0xff, 0xff, 0xfa, 0xe3, 0xff, 0xff, 0x03, 0x00, 0x01, 0x00,
  113              0x30, 0x00, 0x00, 0x00, 0xb0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  114              0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x01, 0x00, 0x01, 0x00,
  115              0x01, 0x00, 0x0a, 0x00, 0x4f, 0x75, 0x1d, 0x3e, 0x3f, 0x00, 0x00, 0x00,
  116              0x00, 0x00, 0x80, 0x3b, 0x80, 0xff, 0xff, 0xff,
  117          };
  118          
  119          static const uint8_t mnist_pic[28 * 28] = {
  120              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
C251 COMPILER V5.60.0,  tinymaix                                                           21/09/22  15:45:21  PAGE 3   

  121              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  122              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  123              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  124              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  125              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  126              0,   0,   0,   0,   116, 125, 171, 255, 255, 150, 93,  0,   0,   0,   0,
  127              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  128              0,   169, 253, 253, 253, 253, 253, 253, 218, 30,  0,   0,   0,   0,   0,
  129              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   169, 253,
  130              253, 253, 213, 142, 176, 253, 253, 122, 0,   0,   0,   0,   0,   0,   0,
  131              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   52,  250, 253, 210, 32,
  132              12,  0,   6,   206, 253, 140, 0,   0,   0,   0,   0,   0,   0,   0,   0,
  133              0,   0,   0,   0,   0,   0,   0,   0,   77,  251, 210, 25,  0,   0,   0,
  134              122, 248, 253, 65,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  135              0,   0,   0,   0,   0,   0,   0,   31,  18,  0,   0,   0,   0,   209, 253,
  136              253, 65,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  137              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   117, 247, 253, 198, 10,
  138              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  139              0,   0,   0,   0,   0,   0,   0,   76,  247, 253, 231, 63,  0,   0,   0,
  140              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  141              0,   0,   0,   0,   0,   128, 253, 253, 144, 0,   0,   0,   0,   0,   0,
  142              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  143              0,   0,   176, 246, 253, 159, 12,  0,   0,   0,   0,   0,   0,   0,   0,
  144              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   25,
  145              234, 253, 233, 35,  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  146              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   198, 253, 253,
  147              141, 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  148              0,   0,   0,   0,   0,   0,   0,   0,   0,   78,  248, 253, 189, 12,  0,
  149              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  150              0,   0,   0,   0,   0,   0,   19,  200, 253, 253, 141, 0,   0,   0,   0,
  151              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  152              0,   0,   0,   0,   134, 253, 253, 173, 12,  0,   0,   0,   0,   0,   0,
  153              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  154              0,   0,   248, 253, 253, 25,  0,   0,   0,   0,   0,   0,   0,   0,   0,
  155              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  156              248, 253, 253, 43,  20,  20,  20,  20,  5,   0,   5,   20,  20,  37,  150,
  157              150, 150, 147, 10,  0,   0,   0,   0,   0,   0,   0,   0,   0,   248, 253,
  158              253, 253, 253, 253, 253, 253, 168, 143, 166, 253, 253, 253, 253, 253, 253,
  159              253, 123, 0,   0,   0,   0,   0,   0,   0,   0,   0,   174, 253, 253, 253,
  160              253, 253, 253, 253, 253, 253, 253, 253, 249, 247, 247, 169, 117, 117, 57,
  161              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   118, 123, 123, 123, 166,
  162              253, 253, 253, 155, 123, 123, 41,  0,   0,   0,   0,   0,   0,   0,   0,
  163              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  164              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  165              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  166              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  167              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  168              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  169              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  170              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  171              0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
  172              0,   0,   0,   0,
  173          };
  174          
  175          tm_err_t layer_cb(tm_mdl_t *mdl, tml_head_t *lh) { // dump middle result
  176   1        return TM_OK;
  177   1      }
  178          
  179          static void parse_output(tm_mat_t *outs) {
  180   1        tm_mat_t out = outs[0];
  181   1        float *datas = out.datas;
*** WARNING C91 IN LINE 181 OF Sources\TinyMaix\tinymaix.c: '=': pointer to different objects
  182   1        float maxp = 0;
  183   1        int maxi = -1;
  184   1        int i = 0;
  185   1        for (i = 0; i < 10; i++) {
C251 COMPILER V5.60.0,  tinymaix                                                           21/09/22  15:45:21  PAGE 4   

  186   2          printf(i);
*** WARNING C40 IN LINE 186 OF Sources\TinyMaix\tinymaix.c: 'int' converted to 'far' pointer
  187   2          printf(": ");
  188   2          printf((int)datas[i] * 100);
*** WARNING C40 IN LINE 188 OF Sources\TinyMaix\tinymaix.c: 'int' converted to 'far' pointer
  189   2          printf("\r\n");
  190   2          if (datas[i] > maxp) {
  191   3            maxi = i;
  192   3            maxp = datas[i];
  193   3          }
  194   2        }
  195   1        printf("### Predict output is: Number ");
  196   1        printf(maxi);
*** WARNING C40 IN LINE 196 OF Sources\TinyMaix\tinymaix.c: 'int' converted to 'far' pointer
  197   1        printf(", prob=");
  198   1        printf((int)maxp * 100);
*** WARNING C40 IN LINE 198 OF Sources\TinyMaix\tinymaix.c: 'int' converted to 'far' pointer
  199   1        printf("\r\n");
  200   1        return;
  201   1      }
  202          
  203          #define IMG_L (28)
  204          #define IMG_CH (1)
  205          #define CLASS_N (10)
  206          
  207          static uint8_t mdl_buf[MDL_BUF_LEN];
  208          
  209          void setup() {
  210   1        tm_mdl_t mdl;
  211   1      
  212   1        tm_mat_t in_uint8 = {3, IMG_L, IMG_L, IMG_CH, (mtype_t *)mnist_pic};
  213   1        tm_mat_t in = {3, IMG_L, IMG_L, IMG_CH, NULL};
  214   1        tm_mat_t outs[1];
  215   1        tm_err_t res;
  216   1      
  217   1        res = tm_load(&mdl, mdl_data, mdl_buf, layer_cb, &in);
  218   1        if (res != TM_OK) {
  219   2          TM_PRINTF("tm model load err %d\r\n", res);
  220   2          return;
  221   2        }
  222   1      
  223   1        res = tm_preprocess(&mdl, TMPP_UINT2INT, &in_uint8, &in);
  224   1      
  225   1        res = tm_run(&mdl, &in, outs);
  226   1        if (res == TM_OK)
  227   1          parse_output(outs);
  228   1        else
  229   1          TM_PRINTF("tm run error: %d\r\n", res);
  230   1        tm_unload(&mdl);
  231   1        return;
  232   1      }
  233          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       464     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       960     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
C251 COMPILER V5.60.0,  tinymaix                                                           21/09/22  15:45:21  PAGE 5   

  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =      1772     ------
End of Module Information.


C251 COMPILATION COMPLETE.  8 WARNING(S),  0 ERROR(S)
