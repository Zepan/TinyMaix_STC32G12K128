A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     1


MACRO ASSEMBLER A251 V4.69.13.0
OBJECT MODULE PLACED IN .\Objects\port.OBJ
ASSEMBLER INVOKED BY: D:\SDK\Keil_V5\C251\BIN\A251.EXE .\Objects\port.src PR(.\Listings\port.ls1) EP

LOC    OBJ             LINE     SOURCE

                          1     $nomacro 
                          2     $modsrc 
                          3     $model (6)
                          4     $case 
                          5     ;
                          6     ; '.\Objects\port.SRC' generated from 'Sources\FreeRTOS\portable\STC32G12K128\port.c'
                          7     ; COMPILER INVOKED BY:
                          8     ;        D:\SDK\Keil_V5\C251\BIN\C251.EXE Sources\FreeRTOS\portable\STC32G12K128\port.c 
                               XSMALL OA FUNCTIONS(REENTRANT) ROM(HUGE) INCDIR(.\Sources\User;.\Sources\User\include;.\S
                               ources\FreeRTOS\include;.\Sources\FreeRTOS\portable\STC32G12K128;.\Sources\TinyMaix) PRIN
                               T(.\Listings\port.lst) TABS(2) SRC(.\Objects\port.SRC) 
                          9     ;
                         10                     NAME port
                         11             EXTRN         EDATA (pxCurrentTCB)
                         12             EXTRN         ECODE : FAR (xTaskIncrementTick??)
                         13             EXTRN         ECODE : FAR (vTaskSwitchContext??)
------                   14                      ?PR?PORT  SEGMENT  ECODE  
------                   15                      ?DT?PORT  SEGMENT  DATA  
------                   16             RSEG       ?DT?PORT
000000                   17                 xPCB:  DSB  1
000001                   18                 xPCH:  DSB  1
000002                   19                 xPCL:  DSB  1
                         20     ;--- special function registers and bits:
 008E.3                  21                T2_CT  BIT   08EH.3
 0094                    22                 P0M0  DATA  094H
 00CF                    23                SPDAT  DATA  0CFH
 0089.6                  24                T1_CT  BIT   089H.6
 00F9.3                  25                PLINH  BIT   0F9H.3
 0089.2                  26                T0_CT  BIT   089H.2
 00A3                    27              V33TRIM  DATA  0A3H
 00D0                    28                 ?PSW  DATA  0D0H
 00FB                    29                LINDR  DATA  0FBH
 00B6.5                  30                PCMPH  BIT   0B6H.5
 0097.0                  31                LINEN  BIT   097H.0
 00BA.7                  32                EAXFR  BIT   0BAH.7
 00FA                    33                LINAR  DATA  0FAH
 009D                    34              IRCBAND  DATA  09DH
 00D0.5                  35                  ?F0  BIT   0D0H.5
 00E6.1                  36                CMPOE  BIT   0E6H.1
 00E6.7                  37                CMPEN  BIT   0E6H.7
 0097                    38                AUXR2  DATA  097H
 00F9.2                  39                LINIF  BIT   0F9H.2
 00C6                    40             IAP_TRIG  DATA  0C6H
 00F9.1                  41                LINIE  BIT   0F9H.1
 00E6.6                  42                CMPIF  BIT   0E6H.6
 00A9                    43                SADDR  DATA  0A9H
 00EA                    44                CKCON  DATA  0EAH
 00F1.0                  45                PCANL  BIT   0F1H.0
 00C7.7                  46                IAPEN  BIT   0C7H.7
 00ED                    47                DMAIR  DATA  0EDH
 008E.0                  48                S1BRT  BIT   08EH.0
 00FD.4                  49                S4REN  BIT   0FDH.4
 00AC.4                  50                S3REN  BIT   0ACH.4
 00B9                    51                SADEN  DATA  0B9H
 0085                    52                  SPH  DATA  085H
 009A.4                  53                S2REN  BIT   09AH.4
 00B7.4                  54                  PSH  BIT   0B7H.4
 00C1.7                  55             WDT_FLAG  BIT   0C1H.7
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     2

 00EF                    56             AUXINTIF  DATA  0EFH
 00F1.3                  57                PCANH  BIT   0F1H.3
 00BB.1                  58              CAN2_S1  BIT   0BBH.1
 00A2.7                  59                S1_S1  BIT   0A2H.7
 00BB.0                  60              CAN2_S0  BIT   0BBH.0
 00FD                    61                S4CON  DATA  0FDH
 00A2.6                  62                S1_S0  BIT   0A2H.6
 00AC                    63                S3CON  DATA  0ACH
 00E3                    64                  DPS  DATA  0E3H
 00EE.3                  65                PI2SH  BIT   0EEH.3
 0097.1                  66                CANEN  BIT   097H.1
 009A                    67                S2CON  DATA  09AH
 00A6                    68               VRTRIM  DATA  0A6H
 0087.4                  69                  POF  BIT   087H.4
 0098.4                  70                  REN  BIT   098H.4
 00F4.6                  71               USBRST  BIT   0F4H.6
 00F4.2                  72                DFREC  BIT   0F4H.2
 00FE                    73                S4BUF  DATA  0FEH
 0087.6                  74                SMOD0  BIT   087H.6
 00AD                    75                S3BUF  DATA  0ADH
 00DD.5                  76                T4x12  BIT   0DDH.5
 0089.5                  77                T1_M1  BIT   089H.5
 009B                    78                S2BUF  DATA  09BH
 00BA.3                  79               CMPO_S  BIT   0BAH.3
 00C1.5                  80               EN_WDT  BIT   0C1H.5
 00DD.1                  81                T3x12  BIT   0DDH.1
 00FD.6                  82                S4ST4  BIT   0FDH.6
 0089.4                  83                T1_M0  BIT   089H.4
 0089.1                  84                T0_M1  BIT   089H.1
 008E.2                  85                T2x12  BIT   08EH.2
 00F1.2                  86                CANIF  BIT   0F1H.2
 0089.0                  87                T0_M0  BIT   089H.0
 008E.6                  88                T1x12  BIT   08EH.6
 00AC.6                  89                S3ST3  BIT   0ACH.6
 00B7                    90                  IPH  DATA  0B7H
 00B7.5                  91                PADCH  BIT   0B7H.5
 00CD                    92               SPSTAT  DATA  0CDH
 00F1.1                  93                CANIE  BIT   0F1H.1
 0082                    94                 ?DPL  DATA  082H
 008E.7                  95                T0x12  BIT   08EH.7
 00BE                    96             ADC_RESL  DATA  0BEH
 00E6.5                  97                  PIE  BIT   0E6H.5
 00DD                    98                T4T3M  DATA  0DDH
 0083                    99                 ?DPH  DATA  083H
 00B5.4                 100                  PX4  BIT   0B5H.4
 00E6.4                 101                  NIE  BIT   0E6H.4
 00DD.7                 102                  T4R  BIT   0DDH.7
 00FD.5                 103                S4SM2  BIT   0FDH.5
 0087.0                 104                  IDL  BIT   087H.0
 009F                   105               IRTRIM  DATA  09FH
 00AC.5                 106                S3SM2  BIT   0ACH.5
 00B8.2                 107                  PX1  BIT   0B8H.2
 00DD.3                 108                  T3R  BIT   0DDH.3
 008E.4                 109                  T2R  BIT   08EH.4
 009A.5                 110                S2SM2  BIT   09AH.5
 00B8.0                 111                  PX0  BIT   0B8H.0
 00C1                   112            WDT_CONTR  DATA  0C1H
 00FD.7                 113                S4SM0  BIT   0FDH.7
 0088.6                 114                  TR1  BIT   088H.6
 009A.6                 115                S2SM1  BIT   09AH.6
 00AC.7                 116                S3SM0  BIT   0ACH.7
 00B6.6                 117                PI2CH  BIT   0B6H.6
 00BB.5                 118             S2SPI_S1  BIT   0BBH.5
 00DF.1                 119                  PS4  BIT   0DFH.1
 0088.4                 120                  TR0  BIT   088H.4
 009A.7                 121                S2SM0  BIT   09AH.7
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     3

 00BB.4                 122             S2SPI_S0  BIT   0BBH.4
 00BB.3                 123             S1SPI_S1  BIT   0BBH.3
 00C2                   124             IAP_DATA  DATA  0C2H
 00D0.4                 125                 ?RS1  BIT   0D0H.4
 00DF.0                 126                  PS3  BIT   0DFH.0
 00FD.3                 127                S4TB8  BIT   0FDH.3
 00AC.3                 128                S3TB8  BIT   0ACH.3
 00B5.0                 129                  PS2  BIT   0B5H.0
 00B8.3                 130                  PT1  BIT   0B8H.3
 00BB.2                 131             S1SPI_S0  BIT   0BBH.2
 00D0.3                 132                 ?RS0  BIT   0D0H.3
 009A.3                 133                S2TB8  BIT   09AH.3
 00B8.1                 134                  PT0  BIT   0B8H.1
 00D3                   135                  T4L  DATA  0D3H
 00FD.2                 136                S4RB8  BIT   0FDH.2
 008E.1                 137               EXTRAM  BIT   08EH.1
 00AC.2                 138                S3RB8  BIT   0ACH.2
 00D5                   139                  T3L  DATA  0D5H
 00DE.5                 140               RESFMT  BIT   0DEH.5
 00E9                   141                 WTST  DATA  0E9H
 0098.5                 142                  SM2  BIT   098H.5
 009A.2                 143                S2RB8  BIT   09AH.2
 00C7.4                 144             CMD_FAIL  BIT   0C7H.4
 00D7                   145                  T2L  DATA  0D7H
 008B                   146                  TL1  DATA  08BH
 008F.6                 147                  EX4  BIT   08FH.6
 0098.6                 148                  SM1  BIT   098H.6
 00A2.3                 149               SPI_S1  BIT   0A2H.3
 008A                   150                  TL0  DATA  08AH
 008F.5                 151                  EX3  BIT   08FH.5
 0098.7                 152                  SM0  BIT   098H.7
 00A2.2                 153               SPI_S0  BIT   0A2H.2
 00B6.3                 154               PPWMBH  BIT   0B6H.3
 00D2                   155                  T4H  DATA  0D2H
 008F.4                 156                  EX2  BIT   08FH.4
 00B6.2                 157               PPWMAH  BIT   0B6H.2
 00D0.0                 158                   ?P  BIT   0D0H.0
 00D4                   159                  T3H  DATA  0D4H
 0088.2                 160                  IT1  BIT   088H.2
 0098.3                 161                  TB8  BIT   098H.3
 00A8.2                 162                  EX1  BIT   0A8H.2
 00D6                   163                  T2H  DATA  0D6H
 0088.0                 164                  IT0  BIT   088H.0
 008D                   165                  TH1  DATA  08DH
 009D.7                 166               USBCKS  BIT   09DH.7
 00A8.0                 167                  EX0  BIT   0A8H.0
 00AF.6                 168                  ET4  BIT   0AFH.6
 008C                   169                  TH0  DATA  08CH
 0098.2                 170                  RB8  BIT   098H.2
 00AF.5                 171                  ET3  BIT   0AFH.5
 00AF.4                 172                  ES4  BIT   0AFH.4
 00DF                   173                  IP3  DATA  0DFH
 00E6.0                 174               CMPRES  BIT   0E6H.0
 00F4                   175               USBCON  DATA  0F4H
 0088.7                 176                  TF1  BIT   088H.7
 00AF.3                 177                  ES3  BIT   0AFH.3
 00AF.2                 178                  ET2  BIT   0AFH.2
 00B5                   179                  IP2  DATA  0B5H
 00FF                   180               RSTCFG  DATA  0FFH
 0088.5                 181                  TF0  BIT   088H.5
 00A8.3                 182                  ET1  BIT   0A8H.3
 00AF.0                 183                  ES2  BIT   0AFH.0
 00A8.1                 184                  ET0  BIT   0A8H.1
 00A2.1                 185               LIN_S1  BIT   0A2H.1
 00E7.6                 186               DISFLT  BIT   0E7H.6
 00A2.0                 187               LIN_S0  BIT   0A2H.0
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     4

 00A5                   188               BGTRIM  DATA  0A5H
 00CE.4                 189                 MSTR  BIT   0CEH.4
 00E0                   190                 ?ACC  DATA  0E0H
 00DC                   191               USBCLK  DATA  0DCH
 00EC                   192               USBDAT  DATA  0ECH
 00BC.5                 193             ADC_FLAG  BIT   0BCH.5
 00C7                   194            IAP_CONTR  DATA  0C7H
 00F9                   195               LINICR  DATA  0F9H
 00FC                   196               USBADR  DATA  0FCH
 008E                   197                 AUXR  DATA  08EH
 00F0                   198                   ?B  DATA  0F0H
 00AF                   199                  IE2  DATA  0AFH
 00C7.6                 200                 SWBS  BIT   0C7H.6
 0088.3                 201                  IE1  BIT   088H.3
 00EB                   202                 MXAX  DATA  0EBH
 0087.3                 203                  GF1  BIT   087H.3
 0088.1                 204                  IE0  BIT   088H.1
 009D.1                 205             HIRCSEL1  BIT   09DH.1
 00A1                   206            BUS_SPEED  DATA  0A1H
 00F8.7                 207                  P77  BIT   0F8H.7
 0087.2                 208                  GF0  BIT   087H.2
 009D.0                 209             HIRCSEL0  BIT   09DH.0
 00B5.1                 210                 PSPI  BIT   0B5H.1
 00E8.7                 211                  P67  BIT   0E8H.7
 00F8.6                 212                  P76  BIT   0F8H.6
 00C8.7                 213                  P57  BIT   0C8H.7
 00E8.6                 214                  P66  BIT   0E8H.6
 00F8.5                 215                  P75  BIT   0F8H.5
 00B5.7                 216                 PUSB  BIT   0B5H.7
 00C0.7                 217                  P47  BIT   0C0H.7
 00C8.6                 218                  P56  BIT   0C8H.6
 00E8.5                 219                  P65  BIT   0E8H.5
 00F8.4                 220                  P74  BIT   0F8H.4
 00B0.7                 221                  P37  BIT   0B0H.7
 00BA.2                 222                 S4_S  BIT   0BAH.2
 00C0.6                 223                  P46  BIT   0C0H.6
 00C8.5                 224                  P55  BIT   0C8H.5
 00DF.2                 225                 PRTC  BIT   0DFH.2
 00E8.4                 226                  P64  BIT   0E8H.4
 00F8.3                 227                  P73  BIT   0F8H.3
 0084                   228                 DPXL  DATA  084H
 00A0.7                 229                  P27  BIT   0A0H.7
 00B0.6                 230                  P36  BIT   0B0H.6
 00BA.1                 231                 S3_S  BIT   0BAH.1
 00BC.6                 232            ADC_START  BIT   0BCH.6
 00C0.5                 233                  P45  BIT   0C0H.5
 00C8.4                 234                  P54  BIT   0C8H.4
 00E8.3                 235                  P63  BIT   0E8H.3
 00F4.4                 236                 PUEN  BIT   0F4H.4
 00F8.2                 237                  P72  BIT   0F8H.2
 0090.7                 238                  P17  BIT   090H.7
 0097.3                 239               CANSEL  BIT   097H.3
 00A0.6                 240                  P26  BIT   0A0H.6
 00B0.5                 241                  P35  BIT   0B0H.5
 00BA.0                 242                 S2_S  BIT   0BAH.0
 00BC.7                 243            ADC_POWER  BIT   0BCH.7
 00BC.4                 244            ADC_EPWMT  BIT   0BCH.4
 00C0.4                 245                  P44  BIT   0C0H.4
 00C8.3                 246                  P53  BIT   0C8H.3
 00E8.2                 247                  P62  BIT   0E8H.2
 00F8.1                 248                  P71  BIT   0F8H.1
 0080.7                 249                  P07  BIT   080H.7
 0090.6                 250                  P16  BIT   090H.6
 00A0.5                 251                  P25  BIT   0A0H.5
 00A2.5                 252               CAN_S1  BIT   0A2H.5
 00B0.4                 253                  P34  BIT   0B0H.4
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     5

 00B8.6                 254                 PLVD  BIT   0B8H.6
 00C0.3                 255                  P43  BIT   0C0H.3
 00C8.2                 256                  P52  BIT   0C8H.2
 00CE.7                 257                 SSIG  BIT   0CEH.7
 00CE.6                 258                 SPEN  BIT   0CEH.6
 00E8.1                 259                  P61  BIT   0E8H.1
 00F8.0                 260                  P70  BIT   0F8H.0
 0080.6                 261                  P06  BIT   080H.6
 0090.5                 262                  P15  BIT   090H.5
 00A0.4                 263                  P24  BIT   0A0H.4
 00A2.4                 264               CAN_S0  BIT   0A2H.4
 00B0.3                 265                  P33  BIT   0B0H.3
 00C0.2                 266                  P42  BIT   0C0H.2
 00C8.1                 267                  P51  BIT   0C8H.1
 00CD.6                 268                 WCOL  BIT   0CDH.6
 00E8.0                 269                  P60  BIT   0E8H.0
 0080.5                 270                  P05  BIT   080H.5
 0088                   271                 TCON  DATA  088H
 0089                   272                 TMOD  DATA  089H
 0090.4                 273                  P14  BIT   090H.4
 00A0.3                 274                  P23  BIT   0A0H.3
 00B0.2                 275                  P32  BIT   0B0H.2
 00C0.1                 276                  P41  BIT   0C0H.1
 00C8.0                 277                  P50  BIT   0C8H.0
 0080.4                 278                  P04  BIT   080H.4
 0087.7                 279                 SMOD  BIT   087H.7
 0090.3                 280                  P13  BIT   090H.3
 0098                   281                 SCON  DATA  098H
 00A0.2                 282                  P22  BIT   0A0H.2
 00B0.1                 283                  P31  BIT   0B0H.1
 00C0.0                 284                  P40  BIT   0C0H.0
 00FF.4                 285               P54RST  BIT   0FFH.4
 0080.3                 286                  P03  BIT   080H.3
 0090.2                 287                  P12  BIT   090H.2
 00A0.1                 288                  P21  BIT   0A0H.1
 00B0.0                 289                  P30  BIT   0B0H.0
 00BB.7                 290               I2S_S1  BIT   0BBH.7
 00CD.7                 291                 SPIF  BIT   0CDH.7
 00DD.4                 292               T4CLKO  BIT   0DDH.4
 00F5                   293              IAP_TPS  DATA  0F5H
 0080.2                 294                  P02  BIT   080H.2
 0090.1                 295                  P11  BIT   090H.1
 00A0.0                 296                  P20  BIT   0A0H.0
 00AF.1                 297                 ESPI  BIT   0AFH.1
 00BB.6                 298               I2S_S0  BIT   0BBH.6
 00C1.4                 299              CLR_WDT  BIT   0C1H.4
 00DD.0                 300               T3CLKO  BIT   0DDH.0
 00F1                   301               CANICR  DATA  0F1H
 0080.1                 302                  P01  BIT   080H.1
 0087                   303                 PCON  DATA  087H
 008E.5                 304               S1M0x6  BIT   08EH.5
 008F.2                 305               T2CLKO  BIT   08FH.2
 0090.0                 306                  P10  BIT   090H.0
 0099                   307                 SBUF  DATA  099H
 00B5.5                 308                 PCMP  BIT   0B5H.5
 00BC                   309            ADC_CONTR  DATA  0BCH
 0080.0                 310                  P00  BIT   080H.0
 008F.1                 311               T1CLKO  BIT   08FH.1
 00AF.7                 312                 EUSB  BIT   0AFH.7
 00EF.6                 313               INT4IF  BIT   0EFH.6
 00F7                   314               ICHECR  DATA  0F7H
 008F.0                 315               T0CLKO  BIT   08FH.0
 00CE.3                 316                 CPOL  BIT   0CEH.3
 00EF.5                 317               INT3IF  BIT   0EFH.5
 00EF.4                 318               INT2IF  BIT   0EFH.4
 0087.5                 319                 LVDF  BIT   087H.5
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     6

 00A8.6                 320                 ELVD  BIT   0A8H.6
 00D1                   321                ?PSW1  DATA  0D1H
 00C1.3                 322              IDL_WDT  BIT   0C1H.3
 00CE.5                 323                 DORD  BIT   0CEH.5
 00E7                   324               CMPCR2  DATA  0E7H
 00E6                   325               CMPCR1  DATA  0E6H
 00F4.3                 326                 PDEN  BIT   0F4H.3
 00CE.1                 327                 SPR1  BIT   0CEH.1
 009E                   328              LIRTRIM  DATA  09EH
 00CE.0                 329                 SPR0  BIT   0CEH.0
 00B6.4                 330                 PX4H  BIT   0B6H.4
 00C7.5                 331                SWRST  BIT   0C7H.5
 00D0.2                 332                  ?OV  BIT   0D0H.2
 00FD.1                 333                 S4TI  BIT   0FDH.1
 00AC.1                 334                 S3TI  BIT   0ACH.1
 00C4                   335            IAP_ADDRL  DATA  0C4H
 0081                   336                  ?SP  DATA  081H
 009A.1                 337                 S2TI  BIT   09AH.1
 00B8.4                 338                   PS  BIT   0B8H.4
 00BA.5                 339               I2C_S1  BIT   0BAH.5
 00F4.5                 340                 PS2M  BIT   0F4H.5
 00FD.0                 341                 S4RI  BIT   0FDH.0
 00AC.0                 342                 S3RI  BIT   0ACH.0
 00B7.2                 343                 PX1H  BIT   0B7H.2
 00BA.4                 344               I2C_S0  BIT   0BAH.4
 00F1.4                 345               PCAN2L  BIT   0F1H.4
 009A.0                 346                 S2RI  BIT   09AH.0
 00B7.0                 347                 PX0H  BIT   0B7H.0
 00C3                   348            IAP_ADDRH  DATA  0C3H
 00EE.1                 349                 PS4H  BIT   0EEH.1
 00DF.3                 350                 PI2S  BIT   0DFH.3
 00E7.7                 351              INVCMPO  BIT   0E7H.7
 00EE.0                 352                 PS3H  BIT   0EEH.0
 00B6.0                 353                 PS2H  BIT   0B6H.0
 00B7.3                 354                 PT1H  BIT   0B7H.3
 00F1.7                 355               PCAN2H  BIT   0F1H.7
 0098.1                 356                   TI  BIT   098H.1
 00B7.1                 357                 PT0H  BIT   0B7H.1
 00CE.2                 358                 CPHA  BIT   0CEH.2
 00F6                   359            IAP_ADDRE  DATA  0F6H
 00D0.7                 360                   CY  BIT   0D0H.7
 0098.0                 361                   RI  BIT   098H.0
 00DE                   362               ADCCFG  DATA  0DEH
 0097.2                 363               CAN2EN  BIT   097H.2
 00B8                   364                   IP  DATA  0B8H
 00B8.5                 365                 PADC  BIT   0B8H.5
 00A8.4                 366                   ES  BIT   0A8H.4
 00EF.2                 367                 T4IF  BIT   0EFH.2
 008F                   368              INTCLKO  DATA  08FH
 00EF.1                 369                 T3IF  BIT   0EFH.1
 00EF.0                 370                 T2IF  BIT   0EFH.0
 00AE                   371                   TA  DATA  0AEH
 00EE                   372                 IP3H  DATA  0EEH
 00F1.6                 373               CAN2IF  BIT   0F1H.6
 0087.1                 374                   PD  BIT   087H.1
 00B6                   375                 IP2H  DATA  0B6H
 00BD                   376              ADC_RES  DATA  0BDH
 00F1.5                 377               CAN2IE  BIT   0F1H.5
 00F4.1                 378                   DP  BIT   0F4H.1
 00E4                   379                 DPL1  DATA  0E4H
 00F4.0                 380                   DM  BIT   0F4H.0
 00C5                   381              IAP_CMD  DATA  0C5H
 00B5.6                 382                 PI2C  BIT   0B5H.6
 00A8                   383                   IE  DATA  0A8H
 00A8.5                 384                 EADC  BIT   0A8H.5
 00BB                   385                P_SW3  DATA  0BBH
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     7

 00E5                   386                 DPH1  DATA  0E5H
 00BA                   387                P_SW2  DATA  0BAH
 00A2                   388                P_SW1  DATA  0A2H
 00FF.6                 389                ENLVR  BIT   0FFH.6
 0089.7                 390              T1_GATE  BIT   089H.7
 00B5.3                 391                PPWMB  BIT   0B5H.3
 00CE                   392                SPCTL  DATA  0CEH
 0089.3                 393              T0_GATE  BIT   089H.3
 00AA                   394                WKTCL  DATA  0AAH
 00B5.2                 395                PPWMA  BIT   0B5H.2
 00F8                   396                   P7  DATA  0F8H
 00A8.7                 397                  ?EA  BIT   0A8H.7
 00B6.1                 398                PSPIH  BIT   0B6H.1
 00E1                   399                 P7M1  DATA  0E1H
 00E8                   400                   P6  DATA  0E8H
 00C8                   401                   P5  DATA  0C8H
 00CB                   402                 P6M1  DATA  0CBH
 00E2                   403                 P7M0  DATA  0E2H
 00B6.7                 404                PUSBH  BIT   0B6H.7
 00C0                   405                   P4  DATA  0C0H
 00C9                   406                 P5M1  DATA  0C9H
 00CC                   407                 P6M0  DATA  0CCH
 00D0.6                 408                  ?AC  BIT   0D0H.6
 00AB                   409                WKTCH  DATA  0ABH
 00B0                   410                   P3  DATA  0B0H
 00B3                   411                 P4M1  DATA  0B3H
 00CA                   412                 P5M0  DATA  0CAH
 00EE.2                 413                PRTCH  BIT   0EEH.2
 00A0                   414                   P2  DATA  0A0H
 00B1                   415                 P3M1  DATA  0B1H
 00B4                   416                 P4M0  DATA  0B4H
 0090                   417                   P1  DATA  090H
 0095                   418                 P2M1  DATA  095H
 00B2                   419                 P3M0  DATA  0B2H
 00F9.0                 420                PLINL  BIT   0F9H.0
 0080                   421                   P0  DATA  080H
 0091                   422                 P1M1  DATA  091H
 0096                   423                 P2M0  DATA  096H
 009D.6                 424              USBCKS2  BIT   09DH.6
 00B7.6                 425                PLVDH  BIT   0B7H.6
 00DD.6                 426                T4_CT  BIT   0DDH.6
 0092                   427                 P1M0  DATA  092H
 0093                   428                 P0M1  DATA  093H
 00DD.2                 429                T3_CT  BIT   0DDH.2
 00F4.7                 430                ENUSB  BIT   0F4H.7
 00E0                   431                  ACC  DATA  0E0H
 00D0                   432                  PSW  DATA  0D0H
 0082                   433                  DPL  DATA  082H
 0083                   434                  DPH  DATA  083H
 00F0                   435                    B  DATA  0F0H
 0081                   436                   SP  DATA  081H
 00D1                   437                 PSW1  DATA  0D1H
 00D1.1                 438                    Z  BIT   0D1H.1
 00A8.7                 439                   EA  BIT   0A8H.7
 00D0.2                 440                   OV  BIT   0D0H.2
 00D0.0                 441                    P  BIT   0D0H.0
 00D0.5                 442                   F0  BIT   0D0H.5
 00D0.4                 443                  RS1  BIT   0D0H.4
 00D0.3                 444                  RS0  BIT   0D0H.3
 00D0.6                 445                   AC  BIT   0D0H.6
                        446     ;--- end of special function registers and bits.
                        447             PUBLIC        vPortYield??
                        448             PUBLIC        vTimer0ISR??
                        449             PUBLIC        pxPortInitialiseStack??
                        450             PUBLIC        xPortStartScheduler??
                        451             PUBLIC        vPortEndScheduler??
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     8

                        452     ; line 1: /*
                        453     ; line 2:  * FreeRTOS Kernel V10.4.6
                        454     ; line 3:  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
                        455     ; line 4:  *
                        456     ; line 5:  * SPDX-License-Identifier: MIT
                        457     ; line 6:  *
                        458     ; line 7:  * Permission is hereby granted, free of charge, to any person obtaining a cop
                               y of
                        459     ; line 8:  * this software and associated documentation files (the "Software"), to deal 
                               in
                        460     ; line 9:  * the Software without restriction, including without limitation the rights to
                        461     ; line 10:  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell cop
                               ies of
                        462     ; line 11:  * the Software, and to permit persons to whom the Software is furnished to d
                               o so,
                        463     ; line 12:  * subject to the following conditions:
                        464     ; line 13:  *
                        465     ; line 14:  * The above copyright notice and this permission notice shall be included in
                                all
                        466     ; line 15:  * copies or substantial portions of the Software.
                        467     ; line 16:  *
                        468     ; line 17:  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
                        469     ; line 18:  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, F
                               ITNESS
                        470     ; line 19:  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHOR
                               S OR
                        471     ; line 20:  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHE
                               THER
                        472     ; line 21:  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
                        473     ; line 22:  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
                        474     ; line 23:  *
                        475     ; line 24:  * https://www.FreeRTOS.org
                        476     ; line 25:  * https://github.com/FreeRTOS
                        477     ; line 26:  *
                        478     ; line 27:  */
                        479     ; line 28: 
                        480     ; line 29: 
                        481     ; line 30: /* Standard includes. */
                        482     ; line 31: #include <stdlib.h>
                        483     ; line 32: 
                        484     ; line 33: /* Scheduler includes. */
                        485     ; line 34: #include "FreeRTOS.h"
                        486     ; line 35: #include "task.h"
                        487     ; line 36: #include "portasm.h"
                        488     ; line 37: 
                        489     ; line 38: /* Constants required to setup the tick ISR. */
                        490     ; line 39: 
                        491     ; line 40: #define portRELOAD_VALUE                    ( 65536 - configCPU_CLOCK_HZ / co
                               nfigTICK_RATE_HZ )
                        492     ; line 41: 
                        493     ; line 42: 
                        494     ; line 43: static StackType_t data xPCL;
                        495     ; line 44: static StackType_t data xPCH;
                        496     ; line 45: static StackType_t data xPCB;
                        497     ; line 46: 
                        498     ; line 47: 
                        499     ; line 48: /* Setup the timer to generate the tick interrupts. */
                        500     ; line 49: static void prvPortSetupTimerInterrupt( void );
                        501     ; line 50: 
                        502     ; line 51: 
                        503     ; line 52: /*-----------------------------------------------------------*/
                        504     ; line 53: 
                        505     ; line 54: 
                        506     ; line 55: /*
                        507     ; line 56:  * See header file for description.
                        508     ; line 57:  */
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE     9

                        509     ; line 58: StackType_t *pxPortInitialiseStack( StackType_t *pxTopOfStack, TaskFunction_t
                                pxCode, void *pvParameters )
------                  510             RSEG       ?PR?PORT
                        511             pxPortInitialiseStack?? PROC FAR
000000 7F21             512             MOV      DR8,DR4
                        513     ;---- Variable 'pxCode' assigned to Register 'DR8' ----
000002 7F70             514             MOV      DR28,DR0
                        515     ;---- Variable 'pxTopOfStack' assigned to Register 'DR28' ----
                        516     ; line 59: {
                        517     ; line 60:     uint32_t ulAddress;
                        518     ; line 61:      uint8_t index;
                        519     ; line 62: 
                        520     ; line 63:     /* Place a few bytes of known values on the bottom of the stack.
                        521     ; line 64:     This is just useful for debugging and can be uncommented if required.*/
                        522     ; line 65:     /*
                        523     ; line 66:     *pxTopOfStack = 0x11;
                        524     ; line 67:     pxTopOfStack++;
                        525     ; line 68:     *pxTopOfStack = 0x22;
                        526     ; line 69:     pxTopOfStack++;
                        527     ; line 70:     *pxTopOfStack = 0x33;
                        528     ; line 71:     pxTopOfStack++;
                        529     ; line 72:     */
                        530     ; line 73: 
                        531     ; line 74:     /* Simulate how the stack would look after a call to the scheduler tick
                        532     ; line 75:     ISR. The return address that would have been pushed by the MCU. */
                        533     ; line 76:     ulAddress = ( uint32_t ) pxCode;
                        534     ;---- Variable 'ulAddress' assigned to Register 'DR4' ----
                        535     ; line 77:     *pxTopOfStack = ( StackType_t ) ( ulAddress >> 16 );    /* PC[23:16] */
000004 7A7B90           536             MOV      @DR28,R9
                        537     ; line 78:     pxTopOfStack++;
000007 0BF4             538             INC      WR30,#01H
                        539     ; line 79:     *pxTopOfStack = ( StackType_t ) ( ulAddress >> 8 );     /* PC[15:8] */
000009 7A7BA0           540             MOV      @DR28,R10
                        541     ; line 80:     pxTopOfStack++;
00000C 0BF4             542             INC      WR30,#01H
                        543     ; line 81:     *pxTopOfStack = ( StackType_t ) ( ulAddress );          /* PC[7:0] */
00000E 7A7BB0           544             MOV      @DR28,R11                      ; A=R11
                        545     ; line 82: 
                        546     ; line 83:      pxTopOfStack++;
000011 0BF4             547             INC      WR30,#01H
                        548     ; line 84:      *pxTopOfStack = 0;                                      /* PSW1 */
000013 E4               549             CLR      A                              ; A=R11
000014 7A7BB0           550             MOV      @DR28,R11                      ; A=R11
                        551     ; line 85: 
                        552     ; line 86:     /* Next all the registers will have been pushed by portSAVE_CONTEXT(). */
                        553     ; line 87:      /* DR56 */
                        554     ; line 88:      pxTopOfStack++;
000017 0BF4             555             INC      WR30,#01H
                        556     ; line 89:      *pxTopOfStack = 0;                                      /* R56 */
000019 7A7BB0           557             MOV      @DR28,R11                      ; A=R11
                        558     ; line 90:      pxTopOfStack++;
00001C 0BF4             559             INC      WR30,#01H
                        560     ; line 91:      *pxTopOfStack = 1;                                      /* R57(DPXL) */
00001E 7401             561             MOV      A,#01H                         ; A=R11
000020 7A7BB0           562             MOV      @DR28,R11                      ; A=R11
                        563     ; line 92:      pxTopOfStack++;
000023 0BF4             564             INC      WR30,#01H
                        565     ; line 93:      *pxTopOfStack = 0;                                      /* R58(DPH) */
000025 E4               566             CLR      A                              ; A=R11
000026 7A7BB0           567             MOV      @DR28,R11                      ; A=R11
                        568     ; line 94:      pxTopOfStack++;
000029 0BF4             569             INC      WR30,#01H
                        570     ; line 95:      *pxTopOfStack = 0;                                      /* R59(DPL) */
00002B 7A7BB0           571             MOV      @DR28,R11                      ; A=R11
                        572     ; line 96: 
                        573     ; line 97:      /* DR28 DR24 DR20 DR16 DR12 DR8 DR4 */
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    10

                        574     ; line 98:      for(index = 0; index < 28; index++)
00002E 6CAA             575             XRL      R10,R10
                        576     ;---- Variable 'index' assigned to Register 'R10' ----
000030                  577     ?C0004:
                        578     ; line 99:      {
                        579     ; line 100:             pxTopOfStack++;
000030 0BF4             580             INC      WR30,#01H
                        581     ; line 101:             *pxTopOfStack = 0;
000032 E4               582             CLR      A                              ; A=R11
000033 7A7BB0           583             MOV      @DR28,R11                      ; A=R11
                        584     ; line 102:     }
000036 0BA0             585             INC      R10,#01H
000038 BEA01C           586             CMP      R10,#01CH
00003B 4000       F     587             JC       ?C0004
                        588     ; line 103: 
                        589     ; line 104:     /* The function parameters will be passed in the DR0 register as
                        590     ; line 105:     a four byte generic pointer is used. */
                        591     ; line 106:     pxTopOfStack++;
00003D 0BF4             592             INC      WR30,#01H
                        593     ; line 107:     ulAddress = ( uint32_t ) pvParameters;
00003F 693FFFFC         594             MOV      WR6,@DR60-0x4                  ; pvParameters
000043 692FFFFA         595             MOV      WR4,@DR60-0x6                  ; pvParameters
                        596     ; line 108:     *pxTopOfStack = ( StackType_t ) ( ulAddress >> 24 );    /* R0 */
000047 7A7B40           597             MOV      @DR28,R4
                        598     ; line 109:     pxTopOfStack++;
00004A 0BF4             599             INC      WR30,#01H
                        600     ; line 110:     *pxTopOfStack = ( StackType_t ) ( ulAddress >> 16 );    /* R1 */
00004C 7A7B50           601             MOV      @DR28,R5
                        602     ; line 111:     pxTopOfStack++;
00004F 0BF4             603             INC      WR30,#01H
                        604     ; line 112:     *pxTopOfStack = ( StackType_t ) ( ulAddress >> 8 );     /* R2 */
000051 7A7B60           605             MOV      @DR28,R6
                        606     ; line 113:     pxTopOfStack++;
000054 0BF4             607             INC      WR30,#01H
                        608     ; line 114:     *pxTopOfStack = ( StackType_t ) ( ulAddress );          /* R3 */
000056 7A7B70           609             MOV      @DR28,R7
                        610     ; line 115:     pxTopOfStack++;
000059 0BF4             611             INC      WR30,#01H
                        612     ; line 116:     *pxTopOfStack = ( StackType_t ) 0;                      /* PSW */
00005B E4               613             CLR      A                              ; A=R11
00005C 7A7BB0           614             MOV      @DR28,R11                      ; A=R11
                        615     ; line 117: 
                        616     ; line 118:     /* we return the top of the stack */
                        617     ; line 119:     return pxTopOfStack;
00005F 7F17             618             MOV      DR4,DR28
                        619     ; line 120: }
000061 AA               620             ERET     
                        621             ENDP
                        622             xPortStartScheduler?? PROC FAR
                        623     ; line 121: /*-----------------------------------------------------------*/
                        624     ; line 122: 
                        625     ; line 123: BaseType_t xPortStartScheduler( void )
                        626     ; line 124: {
                        627     ; line 125:     UNUSED( pxCurrentTCB );
                        628     ; line 126: 
                        629     ; line 127:     /* Start the timer that generates the tick ISR. */
                        630     ; line 128:     prvPortSetupTimerInterrupt();
000062 120000     F     631             LCALL    prvPortSetupTimerInterrupt?_
                        632     ; line 129: 
                        633     ; line 130:     /* Start the first task. */
                        634     ; line 131:     portRESTORE_SPX();
000065 7E1F0000   E     635             MOV DR4,pxCurrentTCB 
000069 49130002         636             MOV WR2,@WR6+0x2 
00006D 6D00             637             XRL WR0,WR0 
00006F 7FF0             638             MOV DR60,DR0 
                        639     ; line 132:     portRESTORE_CONTEXT();
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    11

000071 D0D0             640             POP PSW 
000073 DA0B             641             POP DR0 
000075 DA1B             642             POP DR4 
000077 DA2B             643             POP DR8 
000079 DA3B             644             POP DR12 
00007B DA4B             645             POP DR16 
00007D DA5B             646             POP DR20 
00007F DA6B             647             POP DR24 
000081 DA7B             648             POP DR28 
000083 DAEB             649             POP DR56 
                        650     ; line 133:     portRETURN_TASK();
000085 D0D1             651             POP PSW1 
000087 D2AF             652             SETB EA 
000089 AA               653             DB 0AAH 
                        654     ; line 134: 
                        655     ; line 135:     /* Should never get here! */
                        656     ; line 136:     return pdTRUE;
00008A 7401             657             MOV      A,#01H                         ; A=R11
                        658     ; line 137: }
00008C AA               659             ERET     
                        660             ENDP
                        661             vPortEndScheduler?? PROC FAR
                        662     ; line 138: /*-----------------------------------------------------------*/
                        663     ; line 139: 
                        664     ; line 140: void vPortEndScheduler( void )
                        665     ; line 141: {
                        666     ; line 142:     /* Not implemented for this port. */
                        667     ; line 143: }
00008D AA               668             ERET     
                        669             ENDP
                        670             vPortYield?? PROC FAR
                        671     ; line 144: /*-----------------------------------------------------------*/
                        672     ; line 145: 
                        673     ; line 146: /* Manual context switch.   */
                        674     ; line 147: void vPortYield( void )
                        675     ; line 148: {
                        676     ; line 149:     UNUSED( pxCurrentTCB );
                        677     ; line 150: 
                        678     ; line 151:     /* Normalize the return address of the function
                        679     ; line 152:     call in stack to ECALL mode, then push the current
                        680     ; line 153:     execution context onto the stack.*/
                        681     ; line 154:     portNORMALIZE_FUNCTION_STACK();
00008E C2AF             682             CLR EA 
000090 C0D1             683             PUSH PSW1 
                        684     ; line 155:     portSAVE_CONTEXT();
000092 CAEB             685             PUSH DR56 
000094 CA7B             686             PUSH DR28 
000096 CA6B             687             PUSH DR24 
000098 CA5B             688             PUSH DR20 
00009A CA4B             689             PUSH DR16 
00009C CA3B             690             PUSH DR12 
00009E CA2B             691             PUSH DR8 
0000A0 CA1B             692             PUSH DR4 
0000A2 CA0B             693             PUSH DR0 
0000A4 C0D0             694             PUSH PSW 
                        695     ; line 156: 
                        696     ; line 157:     /* Saves the stack pointer for one task into its TCB, calls
                        697     ; line 158:     vTaskSwitchContext() to update the TCB being used, then restores the sta
                               ck
                        698     ; line 159:     from the new TCB read to run the task. */
                        699     ; line 160:     portEND_SWITCHING_ISR();
0000A6 7F0F             700             MOV DR0,DR60 
0000A8 7E1F0000   E     701             MOV DR4,pxCurrentTCB 
0000AC 59130002         702             MOV @WR6+0x2,WR2 
0000B0 9A000000   E     703             ECALL    vTaskSwitchContext??
0000B4 7E1F0000   E     704             MOV DR4,pxCurrentTCB 
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    12

0000B8 49130002         705             MOV WR2,@WR6+0x2 
0000BC 6D00             706             XRL WR0,WR0 
0000BE 7FF0             707             MOV DR60,DR0 
                        708     ; line 161: 
                        709     ; line 162:     /* Restores the execution context from the stack,
                        710     ; line 163:     then returned using ERET */
                        711     ; line 164:     portRESTORE_CONTEXT();
0000C0 D0D0             712             POP PSW 
0000C2 DA0B             713             POP DR0 
0000C4 DA1B             714             POP DR4 
0000C6 DA2B             715             POP DR8 
0000C8 DA3B             716             POP DR12 
0000CA DA4B             717             POP DR16 
0000CC DA5B             718             POP DR20 
0000CE DA6B             719             POP DR24 
0000D0 DA7B             720             POP DR28 
0000D2 DAEB             721             POP DR56 
                        722     ; line 165:     portRETURN_TASK();
0000D4 D0D1             723             POP PSW1 
0000D6 D2AF             724             SETB EA 
0000D8 AA               725             DB 0AAH 
                        726     ; line 166: }
0000D9 AA               727             ERET     
                        728             ENDP
                        729             vTimer0ISR?? PROC FAR
                        730     ; line 167: 
                        731     ; line 168: /*-----------------------------------------------------------*/
                        732     ; line 169: 
                        733     ; line 170: /* The ISR used depends on whether the preemptive or cooperative
                        734     ; line 171: scheduler is being used. */
                        735     ; line 172: 
                        736     ; line 173: void vTimer0ISR( void )
                        737     ; line 174: {
                        738     ; line 175:     UNUSED( pxCurrentTCB );
                        739     ; line 176: 
                        740     ; line 177:     /* Normalize the return address of the interrupt
                        741     ; line 178:     call in stack to ECALL mode, then push the current
                        742     ; line 179:     execution context onto the stack.*/
                        743     ; line 180:     portNORMALIZE_INTERRUPT_STACK();
0000DA D000       F     744             POP xPCH 
0000DC D000       F     745             POP xPCL 
0000DE D000       F     746             POP xPCB 
0000E0 D0D1             747             POP PSW1 
0000E2 C000       F     748             PUSH xPCB 
0000E4 C000       F     749             PUSH xPCH 
0000E6 C000       F     750             PUSH xPCL 
0000E8 C0D1             751             PUSH PSW1 
                        752     ; line 181:     portSAVE_CONTEXT();
0000EA CAEB             753             PUSH DR56 
0000EC CA7B             754             PUSH DR28 
0000EE CA6B             755             PUSH DR24 
0000F0 CA5B             756             PUSH DR20 
0000F2 CA4B             757             PUSH DR16 
0000F4 CA3B             758             PUSH DR12 
0000F6 CA2B             759             PUSH DR8 
0000F8 CA1B             760             PUSH DR4 
0000FA CA0B             761             PUSH DR0 
0000FC C0D0             762             PUSH PSW 
                        763     ; line 182: 
                        764     ; line 183: #if configUSE_PREEMPTION == 1
                        765     ; line 184: 
                        766     ; line 185:     /* Get the scheduler to update the task states following the tick. */
                        767     ; line 186:     if( xTaskIncrementTick() != pdFALSE )
0000FE 9A000000   E     768             ECALL    xTaskIncrementTick??
000102 6000       F     769             JZ       ?C0011
                        770     ; line 187:     {
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    13

                        771     ; line 188:         /* Saves the stack pointer for one task into its TCB, calls
                        772     ; line 189:         vTaskSwitchContext() to update the TCB being used, then restores the
                                stack
                        773     ; line 190:         from the new TCB read to run the task. */
                        774     ; line 191:         portEND_SWITCHING_ISR();
000104 7F0F             775             MOV DR0,DR60 
000106 7E1F0000   E     776             MOV DR4,pxCurrentTCB 
00010A 59130002         777             MOV @WR6+0x2,WR2 
00010E 9A000000   E     778             ECALL    vTaskSwitchContext??
000112 7E1F0000   E     779             MOV DR4,pxCurrentTCB 
000116 49130002         780             MOV WR2,@WR6+0x2 
00011A 6D00             781             XRL WR0,WR0 
00011C 7FF0             782             MOV DR60,DR0 
                        783     ; line 192:     }
00011E                  784     ?C0011:
                        785     ; line 193: 
                        786     ; line 194: #else
                        787     ; line 195: 
                        788     ; line 196:     /* Same as preemptive tick, but the cooperative scheduler is being used
                        789     ; line 197:     so we don't have to switch in the context of the next task. */
                        790     ; line 198:     xTaskIncrementTick();
                        791     ; line 199: 
                        792     ; line 200: #endif
                        793     ; line 201: 
                        794     ; line 202:     /* Restores the execution context from the stack,
                        795     ; line 203:     then returned using ERET */
                        796     ; line 204:     portRESTORE_CONTEXT();
00011E D0D0             797             POP PSW 
000120 DA0B             798             POP DR0 
000122 DA1B             799             POP DR4 
000124 DA2B             800             POP DR8 
000126 DA3B             801             POP DR12 
000128 DA4B             802             POP DR16 
00012A DA5B             803             POP DR20 
00012C DA6B             804             POP DR24 
00012E DA7B             805             POP DR28 
000130 DAEB             806             POP DR56 
                        807     ; line 205:     portRELEASE_INTERRUPT();
000132 C2AF             808             CLR EA 
000134 C0D1             809             PUSH PSW1 
000136 CA0200     F     810             PUSH #BYTE2 ($+10) 
000139 CA0200     F     811             PUSH #BYTE0 ($+7) 
00013C CA0200     F     812             PUSH #BYTE1 ($+4) 
00013F 32               813             RETI 
                        814     ; line 206:     portRETURN_TASK();
000140 D0D1             815             POP PSW1 
000142 D2AF             816             SETB EA 
000144 AA               817             DB 0AAH 
                        818     ; line 207: }
000145 AA               819             ERET     
                        820             ENDP
                        821             prvPortSetupTimerInterrupt?_ PROC
                        822     ; line 208: 
                        823     ; line 209: /*-----------------------------------------------------------*/
                        824     ; line 210: 
                        825     ; line 211: /*Setup the systick timer to generate the tick interrupts at the required
                        826     ; line 212: frequency. */
                        827     ; line 213: static void prvPortSetupTimerInterrupt( void )
                        828     ; line 214: {
                        829     ; line 215:     /* Timer0 work at 1T mode. */
                        830     ; line 216:     AUXR |= 0x80;
000146 438E80           831             ORL      AUXR,#080H
                        832     ; line 217: 
                        833     ; line 218:     /* Timer0 work at mode0 (16-bit auto reload mode) */
                        834     ; line 219:     TMOD &= ~0x0f;
000149 5389F0           835             ANL      TMOD,#0F0H
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    14

                        836     ; line 220: 
                        837     ; line 221:     /* Initial timer0 reload value (1ms per cycle). */
                        838     ; line 222:     TL0 = ( uint8_t )( portRELOAD_VALUE );
00014C 758A40           839             MOV      TL0,#040H
                        840     ; line 223:     TH0 = ( uint8_t )( portRELOAD_VALUE >> 8 );
00014F 758CA2           841             MOV      TH0,#0A2H
                        842     ; line 224: 
                        843     ; line 225:     /* Interrupts are disabled when this is called so
                        844     ; line 226:     the timer can be started here. */
                        845     ; line 227:     TR0 = 1;
000152 D28C             846             SETB     TR0
                        847     ; line 228: 
                        848     ; line 229:     /* Enable timer0 interrupts. */
                        849     ; line 230:     ET0 = 1;
000154 D2A9             850             SETB     ET0
                        851     ; line 231: }
000156 22               852             RET      
                        853             ENDP
                        854     ; line 232: 
                        855     ; line 233: 
                        856     ; line 234:     __asm   { CSEG    AT  0BH       }
00000B                  857             CSEG    AT  0BH       
                        858     ; line 235: #if ( configUSE_ROMHUGE == 0 )
                        859     ; line 236:     __asm   { JMP     vTimer0ISR?_  }
                        860     ; line 237: #else
                        861     ; line 238:     __asm   { JMP     vTimer0ISR??  }
00000B 8A000000   F     862             JMP     vTimer0ISR??  
                        863     ; line 239: #endif
                        864             END
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    15

SYMBOL TABLE LISTING
------ ----- -------


N A M E                       T Y P E  V A L U E     ATTRIBUTES

?AC. . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
?ACC . . . . . . . . . . . .  D  ADDR  00E0H     A   
?B . . . . . . . . . . . . .  D  ADDR  00F0H     A   
?C0004 . . . . . . . . . . .  EC ADDR  0030H     R   SEG=?PR?PORT
?C0011 . . . . . . . . . . .  EC ADDR  011EH     R   SEG=?PR?PORT
?DPH . . . . . . . . . . . .  D  ADDR  0083H     A   
?DPL . . . . . . . . . . . .  D  ADDR  0082H     A   
?DT?PORT . . . . . . . . . .  D  SEG   000003H       REL=UNIT, ALN=BYTE
?EA. . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
?F0. . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
?OV. . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
?P . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
?PR?PORT . . . . . . . . . .  EC SEG   000157H       REL=UNIT, ALN=BYTE
?PSW . . . . . . . . . . . .  D  ADDR  00D0H     A   
?PSW1. . . . . . . . . . . .  D  ADDR  00D1H     A   
?RS0 . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
?RS1 . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
?SP. . . . . . . . . . . . .  D  ADDR  0081H     A   
AC . . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC. . . . . . . . . . . . .  D  ADDR  00E0H     A   
ADCCFG . . . . . . . . . . .  D  ADDR  00DEH     A   
ADC_CONTR. . . . . . . . . .  D  ADDR  00BCH     A   
ADC_EPWMT. . . . . . . . . .  EB ADDR  00BCH.4   A   
ADC_FLAG . . . . . . . . . .  EB ADDR  00BCH.5   A   
ADC_POWER. . . . . . . . . .  EB ADDR  00BCH.7   A   
ADC_RES. . . . . . . . . . .  D  ADDR  00BDH     A   
ADC_RESL . . . . . . . . . .  D  ADDR  00BEH     A   
ADC_START. . . . . . . . . .  EB ADDR  00BCH.6   A   
AUXINTIF . . . . . . . . . .  D  ADDR  00EFH     A   
AUXR . . . . . . . . . . . .  D  ADDR  008EH     A   
AUXR2. . . . . . . . . . . .  D  ADDR  0097H     A   
B. . . . . . . . . . . . . .  D  ADDR  00F0H     A   
BGTRIM . . . . . . . . . . .  D  ADDR  00A5H     A   
BUS_SPEED. . . . . . . . . .  D  ADDR  00A1H     A   
CAN2EN . . . . . . . . . . .  EB ADDR  0097H.2   A   
CAN2IE . . . . . . . . . . .  EB ADDR  00F1H.5   A   
CAN2IF . . . . . . . . . . .  EB ADDR  00F1H.6   A   
CAN2_S0. . . . . . . . . . .  EB ADDR  00BBH.0   A   
CAN2_S1. . . . . . . . . . .  EB ADDR  00BBH.1   A   
CANEN. . . . . . . . . . . .  EB ADDR  0097H.1   A   
CANICR . . . . . . . . . . .  D  ADDR  00F1H     A   
CANIE. . . . . . . . . . . .  EB ADDR  00F1H.1   A   
CANIF. . . . . . . . . . . .  EB ADDR  00F1H.2   A   
CANSEL . . . . . . . . . . .  EB ADDR  0097H.3   A   
CAN_S0 . . . . . . . . . . .  EB ADDR  00A2H.4   A   
CAN_S1 . . . . . . . . . . .  EB ADDR  00A2H.5   A   
CKCON. . . . . . . . . . . .  D  ADDR  00EAH     A   
CLR_WDT. . . . . . . . . . .  EB ADDR  00C1H.4   A   
CMD_FAIL . . . . . . . . . .  EB ADDR  00C7H.4   A   
CMPCR1 . . . . . . . . . . .  D  ADDR  00E6H     A   
CMPCR2 . . . . . . . . . . .  D  ADDR  00E7H     A   
CMPEN. . . . . . . . . . . .  EB ADDR  00E6H.7   A   
CMPIF. . . . . . . . . . . .  EB ADDR  00E6H.6   A   
CMPOE. . . . . . . . . . . .  EB ADDR  00E6H.1   A   
CMPO_S . . . . . . . . . . .  EB ADDR  00BAH.3   A   
CMPRES . . . . . . . . . . .  EB ADDR  00E6H.0   A   
CPHA . . . . . . . . . . . .  EB ADDR  00CEH.2   A   
CPOL . . . . . . . . . . . .  EB ADDR  00CEH.3   A   
CY . . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DFREC. . . . . . . . . . . .  EB ADDR  00F4H.2   A   
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    16

DISFLT . . . . . . . . . . .  EB ADDR  00E7H.6   A   
DM . . . . . . . . . . . . .  EB ADDR  00F4H.0   A   
DMAIR. . . . . . . . . . . .  D  ADDR  00EDH     A   
DORD . . . . . . . . . . . .  EB ADDR  00CEH.5   A   
DP . . . . . . . . . . . . .  EB ADDR  00F4H.1   A   
DPH. . . . . . . . . . . . .  D  ADDR  0083H     A   
DPH1 . . . . . . . . . . . .  D  ADDR  00E5H     A   
DPL. . . . . . . . . . . . .  D  ADDR  0082H     A   
DPL1 . . . . . . . . . . . .  D  ADDR  00E4H     A   
DPS. . . . . . . . . . . . .  D  ADDR  00E3H     A   
DPXL . . . . . . . . . . . .  D  ADDR  0084H     A   
EA . . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
EADC . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EAXFR. . . . . . . . . . . .  EB ADDR  00BAH.7   A   
ELVD . . . . . . . . . . . .  B  ADDR  00A8H.6   A   
ENLVR. . . . . . . . . . . .  EB ADDR  00FFH.6   A   
ENUSB. . . . . . . . . . . .  EB ADDR  00F4H.7   A   
EN_WDT . . . . . . . . . . .  EB ADDR  00C1H.5   A   
ES . . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ES2. . . . . . . . . . . . .  EB ADDR  00AFH.0   A   
ES3. . . . . . . . . . . . .  EB ADDR  00AFH.3   A   
ES4. . . . . . . . . . . . .  EB ADDR  00AFH.4   A   
ESPI . . . . . . . . . . . .  EB ADDR  00AFH.1   A   
ET0. . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1. . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2. . . . . . . . . . . . .  EB ADDR  00AFH.2   A   
ET3. . . . . . . . . . . . .  EB ADDR  00AFH.5   A   
ET4. . . . . . . . . . . . .  EB ADDR  00AFH.6   A   
EUSB . . . . . . . . . . . .  EB ADDR  00AFH.7   A   
EX0. . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1. . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EX2. . . . . . . . . . . . .  EB ADDR  008FH.4   A   
EX3. . . . . . . . . . . . .  EB ADDR  008FH.5   A   
EX4. . . . . . . . . . . . .  EB ADDR  008FH.6   A   
EXTRAM . . . . . . . . . . .  EB ADDR  008EH.1   A   
F0 . . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
GF0. . . . . . . . . . . . .  EB ADDR  0087H.2   A   
GF1. . . . . . . . . . . . .  EB ADDR  0087H.3   A   
HIRCSEL0 . . . . . . . . . .  EB ADDR  009DH.0   A   
HIRCSEL1 . . . . . . . . . .  EB ADDR  009DH.1   A   
I2C_S0 . . . . . . . . . . .  EB ADDR  00BAH.4   A   
I2C_S1 . . . . . . . . . . .  EB ADDR  00BAH.5   A   
I2S_S0 . . . . . . . . . . .  EB ADDR  00BBH.6   A   
I2S_S1 . . . . . . . . . . .  EB ADDR  00BBH.7   A   
IAPEN. . . . . . . . . . . .  EB ADDR  00C7H.7   A   
IAP_ADDRE. . . . . . . . . .  D  ADDR  00F6H     A   
IAP_ADDRH. . . . . . . . . .  D  ADDR  00C3H     A   
IAP_ADDRL. . . . . . . . . .  D  ADDR  00C4H     A   
IAP_CMD. . . . . . . . . . .  D  ADDR  00C5H     A   
IAP_CONTR. . . . . . . . . .  D  ADDR  00C7H     A   
IAP_DATA . . . . . . . . . .  D  ADDR  00C2H     A   
IAP_TPS. . . . . . . . . . .  D  ADDR  00F5H     A   
IAP_TRIG . . . . . . . . . .  D  ADDR  00C6H     A   
ICHECR . . . . . . . . . . .  D  ADDR  00F7H     A   
IDL. . . . . . . . . . . . .  EB ADDR  0087H.0   A   
IDL_WDT. . . . . . . . . . .  EB ADDR  00C1H.3   A   
IE . . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0. . . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1. . . . . . . . . . . . .  B  ADDR  0088H.3   A   
IE2. . . . . . . . . . . . .  D  ADDR  00AFH     A   
INT2IF . . . . . . . . . . .  EB ADDR  00EFH.4   A   
INT3IF . . . . . . . . . . .  EB ADDR  00EFH.5   A   
INT4IF . . . . . . . . . . .  EB ADDR  00EFH.6   A   
INTCLKO. . . . . . . . . . .  D  ADDR  008FH     A   
INVCMPO. . . . . . . . . . .  EB ADDR  00E7H.7   A   
IP . . . . . . . . . . . . .  D  ADDR  00B8H     A   
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    17

IP2. . . . . . . . . . . . .  D  ADDR  00B5H     A   
IP2H . . . . . . . . . . . .  D  ADDR  00B6H     A   
IP3. . . . . . . . . . . . .  D  ADDR  00DFH     A   
IP3H . . . . . . . . . . . .  D  ADDR  00EEH     A   
IPH. . . . . . . . . . . . .  D  ADDR  00B7H     A   
IRCBAND. . . . . . . . . . .  D  ADDR  009DH     A   
IRTRIM . . . . . . . . . . .  D  ADDR  009FH     A   
IT0. . . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1. . . . . . . . . . . . .  B  ADDR  0088H.2   A   
LINAR. . . . . . . . . . . .  D  ADDR  00FAH     A   
LINDR. . . . . . . . . . . .  D  ADDR  00FBH     A   
LINEN. . . . . . . . . . . .  EB ADDR  0097H.0   A   
LINICR . . . . . . . . . . .  D  ADDR  00F9H     A   
LINIE. . . . . . . . . . . .  EB ADDR  00F9H.1   A   
LINIF. . . . . . . . . . . .  EB ADDR  00F9H.2   A   
LIN_S0 . . . . . . . . . . .  EB ADDR  00A2H.0   A   
LIN_S1 . . . . . . . . . . .  EB ADDR  00A2H.1   A   
LIRTRIM. . . . . . . . . . .  D  ADDR  009EH     A   
LVDF . . . . . . . . . . . .  EB ADDR  0087H.5   A   
MSTR . . . . . . . . . . . .  EB ADDR  00CEH.4   A   
MXAX . . . . . . . . . . . .  D  ADDR  00EBH     A   
NIE. . . . . . . . . . . . .  EB ADDR  00E6H.4   A   
OV . . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P. . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0 . . . . . . . . . . . . .  D  ADDR  0080H     A   
P00. . . . . . . . . . . . .  B  ADDR  0080H.0   A   
P01. . . . . . . . . . . . .  B  ADDR  0080H.1   A   
P02. . . . . . . . . . . . .  B  ADDR  0080H.2   A   
P03. . . . . . . . . . . . .  B  ADDR  0080H.3   A   
P04. . . . . . . . . . . . .  B  ADDR  0080H.4   A   
P05. . . . . . . . . . . . .  B  ADDR  0080H.5   A   
P06. . . . . . . . . . . . .  B  ADDR  0080H.6   A   
P07. . . . . . . . . . . . .  B  ADDR  0080H.7   A   
P0M0 . . . . . . . . . . . .  D  ADDR  0094H     A   
P0M1 . . . . . . . . . . . .  D  ADDR  0093H     A   
P1 . . . . . . . . . . . . .  D  ADDR  0090H     A   
P10. . . . . . . . . . . . .  B  ADDR  0090H.0   A   
P11. . . . . . . . . . . . .  B  ADDR  0090H.1   A   
P12. . . . . . . . . . . . .  B  ADDR  0090H.2   A   
P13. . . . . . . . . . . . .  B  ADDR  0090H.3   A   
P14. . . . . . . . . . . . .  B  ADDR  0090H.4   A   
P15. . . . . . . . . . . . .  B  ADDR  0090H.5   A   
P16. . . . . . . . . . . . .  B  ADDR  0090H.6   A   
P17. . . . . . . . . . . . .  B  ADDR  0090H.7   A   
P1M0 . . . . . . . . . . . .  D  ADDR  0092H     A   
P1M1 . . . . . . . . . . . .  D  ADDR  0091H     A   
P2 . . . . . . . . . . . . .  D  ADDR  00A0H     A   
P20. . . . . . . . . . . . .  B  ADDR  00A0H.0   A   
P21. . . . . . . . . . . . .  B  ADDR  00A0H.1   A   
P22. . . . . . . . . . . . .  B  ADDR  00A0H.2   A   
P23. . . . . . . . . . . . .  B  ADDR  00A0H.3   A   
P24. . . . . . . . . . . . .  B  ADDR  00A0H.4   A   
P25. . . . . . . . . . . . .  B  ADDR  00A0H.5   A   
P26. . . . . . . . . . . . .  B  ADDR  00A0H.6   A   
P27. . . . . . . . . . . . .  B  ADDR  00A0H.7   A   
P2M0 . . . . . . . . . . . .  D  ADDR  0096H     A   
P2M1 . . . . . . . . . . . .  D  ADDR  0095H     A   
P3 . . . . . . . . . . . . .  D  ADDR  00B0H     A   
P30. . . . . . . . . . . . .  B  ADDR  00B0H.0   A   
P31. . . . . . . . . . . . .  B  ADDR  00B0H.1   A   
P32. . . . . . . . . . . . .  B  ADDR  00B0H.2   A   
P33. . . . . . . . . . . . .  B  ADDR  00B0H.3   A   
P34. . . . . . . . . . . . .  B  ADDR  00B0H.4   A   
P35. . . . . . . . . . . . .  B  ADDR  00B0H.5   A   
P36. . . . . . . . . . . . .  B  ADDR  00B0H.6   A   
P37. . . . . . . . . . . . .  B  ADDR  00B0H.7   A   
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    18

P3M0 . . . . . . . . . . . .  D  ADDR  00B2H     A   
P3M1 . . . . . . . . . . . .  D  ADDR  00B1H     A   
P4 . . . . . . . . . . . . .  D  ADDR  00C0H     A   
P40. . . . . . . . . . . . .  B  ADDR  00C0H.0   A   
P41. . . . . . . . . . . . .  B  ADDR  00C0H.1   A   
P42. . . . . . . . . . . . .  B  ADDR  00C0H.2   A   
P43. . . . . . . . . . . . .  B  ADDR  00C0H.3   A   
P44. . . . . . . . . . . . .  B  ADDR  00C0H.4   A   
P45. . . . . . . . . . . . .  B  ADDR  00C0H.5   A   
P46. . . . . . . . . . . . .  B  ADDR  00C0H.6   A   
P47. . . . . . . . . . . . .  B  ADDR  00C0H.7   A   
P4M0 . . . . . . . . . . . .  D  ADDR  00B4H     A   
P4M1 . . . . . . . . . . . .  D  ADDR  00B3H     A   
P5 . . . . . . . . . . . . .  D  ADDR  00C8H     A   
P50. . . . . . . . . . . . .  B  ADDR  00C8H.0   A   
P51. . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
P52. . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
P53. . . . . . . . . . . . .  B  ADDR  00C8H.3   A   
P54. . . . . . . . . . . . .  B  ADDR  00C8H.4   A   
P54RST . . . . . . . . . . .  EB ADDR  00FFH.4   A   
P55. . . . . . . . . . . . .  B  ADDR  00C8H.5   A   
P56. . . . . . . . . . . . .  B  ADDR  00C8H.6   A   
P57. . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
P5M0 . . . . . . . . . . . .  D  ADDR  00CAH     A   
P5M1 . . . . . . . . . . . .  D  ADDR  00C9H     A   
P6 . . . . . . . . . . . . .  D  ADDR  00E8H     A   
P60. . . . . . . . . . . . .  B  ADDR  00E8H.0   A   
P61. . . . . . . . . . . . .  B  ADDR  00E8H.1   A   
P62. . . . . . . . . . . . .  B  ADDR  00E8H.2   A   
P63. . . . . . . . . . . . .  B  ADDR  00E8H.3   A   
P64. . . . . . . . . . . . .  B  ADDR  00E8H.4   A   
P65. . . . . . . . . . . . .  B  ADDR  00E8H.5   A   
P66. . . . . . . . . . . . .  B  ADDR  00E8H.6   A   
P67. . . . . . . . . . . . .  B  ADDR  00E8H.7   A   
P6M0 . . . . . . . . . . . .  D  ADDR  00CCH     A   
P6M1 . . . . . . . . . . . .  D  ADDR  00CBH     A   
P7 . . . . . . . . . . . . .  D  ADDR  00F8H     A   
P70. . . . . . . . . . . . .  B  ADDR  00F8H.0   A   
P71. . . . . . . . . . . . .  B  ADDR  00F8H.1   A   
P72. . . . . . . . . . . . .  B  ADDR  00F8H.2   A   
P73. . . . . . . . . . . . .  B  ADDR  00F8H.3   A   
P74. . . . . . . . . . . . .  B  ADDR  00F8H.4   A   
P75. . . . . . . . . . . . .  B  ADDR  00F8H.5   A   
P76. . . . . . . . . . . . .  B  ADDR  00F8H.6   A   
P77. . . . . . . . . . . . .  B  ADDR  00F8H.7   A   
P7M0 . . . . . . . . . . . .  D  ADDR  00E2H     A   
P7M1 . . . . . . . . . . . .  D  ADDR  00E1H     A   
PADC . . . . . . . . . . . .  B  ADDR  00B8H.5   A   
PADCH. . . . . . . . . . . .  EB ADDR  00B7H.5   A   
PCAN2H . . . . . . . . . . .  EB ADDR  00F1H.7   A   
PCAN2L . . . . . . . . . . .  EB ADDR  00F1H.4   A   
PCANH. . . . . . . . . . . .  EB ADDR  00F1H.3   A   
PCANL. . . . . . . . . . . .  EB ADDR  00F1H.0   A   
PCMP . . . . . . . . . . . .  EB ADDR  00B5H.5   A   
PCMPH. . . . . . . . . . . .  EB ADDR  00B6H.5   A   
PCON . . . . . . . . . . . .  D  ADDR  0087H     A   
PD . . . . . . . . . . . . .  EB ADDR  0087H.1   A   
PDEN . . . . . . . . . . . .  EB ADDR  00F4H.3   A   
PI2C . . . . . . . . . . . .  EB ADDR  00B5H.6   A   
PI2CH. . . . . . . . . . . .  EB ADDR  00B6H.6   A   
PI2S . . . . . . . . . . . .  EB ADDR  00DFH.3   A   
PI2SH. . . . . . . . . . . .  EB ADDR  00EEH.3   A   
PIE. . . . . . . . . . . . .  EB ADDR  00E6H.5   A   
PLINH. . . . . . . . . . . .  EB ADDR  00F9H.3   A   
PLINL. . . . . . . . . . . .  EB ADDR  00F9H.0   A   
PLVD . . . . . . . . . . . .  B  ADDR  00B8H.6   A   
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    19

PLVDH. . . . . . . . . . . .  EB ADDR  00B7H.6   A   
POF. . . . . . . . . . . . .  EB ADDR  0087H.4   A   
PPWMA. . . . . . . . . . . .  EB ADDR  00B5H.2   A   
PPWMAH . . . . . . . . . . .  EB ADDR  00B6H.2   A   
PPWMB. . . . . . . . . . . .  EB ADDR  00B5H.3   A   
PPWMBH . . . . . . . . . . .  EB ADDR  00B6H.3   A   
PRTC . . . . . . . . . . . .  EB ADDR  00DFH.2   A   
PRTCH. . . . . . . . . . . .  EB ADDR  00EEH.2   A   
PS . . . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PS2. . . . . . . . . . . . .  EB ADDR  00B5H.0   A   
PS2H . . . . . . . . . . . .  EB ADDR  00B6H.0   A   
PS2M . . . . . . . . . . . .  EB ADDR  00F4H.5   A   
PS3. . . . . . . . . . . . .  EB ADDR  00DFH.0   A   
PS3H . . . . . . . . . . . .  EB ADDR  00EEH.0   A   
PS4. . . . . . . . . . . . .  EB ADDR  00DFH.1   A   
PS4H . . . . . . . . . . . .  EB ADDR  00EEH.1   A   
PSH. . . . . . . . . . . . .  EB ADDR  00B7H.4   A   
PSPI . . . . . . . . . . . .  EB ADDR  00B5H.1   A   
PSPIH. . . . . . . . . . . .  EB ADDR  00B6H.1   A   
PSW. . . . . . . . . . . . .  D  ADDR  00D0H     A   
PSW1 . . . . . . . . . . . .  D  ADDR  00D1H     A   
PT0. . . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT0H . . . . . . . . . . . .  EB ADDR  00B7H.1   A   
PT1. . . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT1H . . . . . . . . . . . .  EB ADDR  00B7H.3   A   
PUEN . . . . . . . . . . . .  EB ADDR  00F4H.4   A   
PUSB . . . . . . . . . . . .  EB ADDR  00B5H.7   A   
PUSBH. . . . . . . . . . . .  EB ADDR  00B6H.7   A   
PX0. . . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX0H . . . . . . . . . . . .  EB ADDR  00B7H.0   A   
PX1. . . . . . . . . . . . .  B  ADDR  00B8H.2   A   
PX1H . . . . . . . . . . . .  EB ADDR  00B7H.2   A   
PX4. . . . . . . . . . . . .  EB ADDR  00B5H.4   A   
PX4H . . . . . . . . . . . .  EB ADDR  00B6H.4   A   
P_SW1. . . . . . . . . . . .  D  ADDR  00A2H     A   
P_SW2. . . . . . . . . . . .  D  ADDR  00BAH     A   
P_SW3. . . . . . . . . . . .  D  ADDR  00BBH     A   
RB8. . . . . . . . . . . . .  B  ADDR  0098H.2   A   
REN. . . . . . . . . . . . .  B  ADDR  0098H.4   A   
RESFMT . . . . . . . . . . .  EB ADDR  00DEH.5   A   
RI . . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RS0. . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1. . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RSTCFG . . . . . . . . . . .  D  ADDR  00FFH     A   
S1BRT. . . . . . . . . . . .  EB ADDR  008EH.0   A   
S1M0x6 . . . . . . . . . . .  EB ADDR  008EH.5   A   
S1SPI_S0 . . . . . . . . . .  EB ADDR  00BBH.2   A   
S1SPI_S1 . . . . . . . . . .  EB ADDR  00BBH.3   A   
S1_S0. . . . . . . . . . . .  EB ADDR  00A2H.6   A   
S1_S1. . . . . . . . . . . .  EB ADDR  00A2H.7   A   
S2BUF. . . . . . . . . . . .  D  ADDR  009BH     A   
S2CON. . . . . . . . . . . .  D  ADDR  009AH     A   
S2RB8. . . . . . . . . . . .  EB ADDR  009AH.2   A   
S2REN. . . . . . . . . . . .  EB ADDR  009AH.4   A   
S2RI . . . . . . . . . . . .  EB ADDR  009AH.0   A   
S2SM0. . . . . . . . . . . .  EB ADDR  009AH.7   A   
S2SM1. . . . . . . . . . . .  EB ADDR  009AH.6   A   
S2SM2. . . . . . . . . . . .  EB ADDR  009AH.5   A   
S2SPI_S0 . . . . . . . . . .  EB ADDR  00BBH.4   A   
S2SPI_S1 . . . . . . . . . .  EB ADDR  00BBH.5   A   
S2TB8. . . . . . . . . . . .  EB ADDR  009AH.3   A   
S2TI . . . . . . . . . . . .  EB ADDR  009AH.1   A   
S2_S . . . . . . . . . . . .  EB ADDR  00BAH.0   A   
S3BUF. . . . . . . . . . . .  D  ADDR  00ADH     A   
S3CON. . . . . . . . . . . .  D  ADDR  00ACH     A   
S3RB8. . . . . . . . . . . .  EB ADDR  00ACH.2   A   
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    20

S3REN. . . . . . . . . . . .  EB ADDR  00ACH.4   A   
S3RI . . . . . . . . . . . .  EB ADDR  00ACH.0   A   
S3SM0. . . . . . . . . . . .  EB ADDR  00ACH.7   A   
S3SM2. . . . . . . . . . . .  EB ADDR  00ACH.5   A   
S3ST3. . . . . . . . . . . .  EB ADDR  00ACH.6   A   
S3TB8. . . . . . . . . . . .  EB ADDR  00ACH.3   A   
S3TI . . . . . . . . . . . .  EB ADDR  00ACH.1   A   
S3_S . . . . . . . . . . . .  EB ADDR  00BAH.1   A   
S4BUF. . . . . . . . . . . .  D  ADDR  00FEH     A   
S4CON. . . . . . . . . . . .  D  ADDR  00FDH     A   
S4RB8. . . . . . . . . . . .  EB ADDR  00FDH.2   A   
S4REN. . . . . . . . . . . .  EB ADDR  00FDH.4   A   
S4RI . . . . . . . . . . . .  EB ADDR  00FDH.0   A   
S4SM0. . . . . . . . . . . .  EB ADDR  00FDH.7   A   
S4SM2. . . . . . . . . . . .  EB ADDR  00FDH.5   A   
S4ST4. . . . . . . . . . . .  EB ADDR  00FDH.6   A   
S4TB8. . . . . . . . . . . .  EB ADDR  00FDH.3   A   
S4TI . . . . . . . . . . . .  EB ADDR  00FDH.1   A   
S4_S . . . . . . . . . . . .  EB ADDR  00BAH.2   A   
SADDR. . . . . . . . . . . .  D  ADDR  00A9H     A   
SADEN. . . . . . . . . . . .  D  ADDR  00B9H     A   
SBUF . . . . . . . . . . . .  D  ADDR  0099H     A   
SCON . . . . . . . . . . . .  D  ADDR  0098H     A   
SM0. . . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM1. . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM2. . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SMOD . . . . . . . . . . . .  EB ADDR  0087H.7   A   
SMOD0. . . . . . . . . . . .  EB ADDR  0087H.6   A   
SP . . . . . . . . . . . . .  D  ADDR  0081H     A   
SPCTL. . . . . . . . . . . .  D  ADDR  00CEH     A   
SPDAT. . . . . . . . . . . .  D  ADDR  00CFH     A   
SPEN . . . . . . . . . . . .  EB ADDR  00CEH.6   A   
SPH. . . . . . . . . . . . .  D  ADDR  0085H     A   
SPIF . . . . . . . . . . . .  EB ADDR  00CDH.7   A   
SPI_S0 . . . . . . . . . . .  EB ADDR  00A2H.2   A   
SPI_S1 . . . . . . . . . . .  EB ADDR  00A2H.3   A   
SPR0 . . . . . . . . . . . .  EB ADDR  00CEH.0   A   
SPR1 . . . . . . . . . . . .  EB ADDR  00CEH.1   A   
SPSTAT . . . . . . . . . . .  D  ADDR  00CDH     A   
SSIG . . . . . . . . . . . .  EB ADDR  00CEH.7   A   
SWBS . . . . . . . . . . . .  EB ADDR  00C7H.6   A   
SWRST. . . . . . . . . . . .  EB ADDR  00C7H.5   A   
T0CLKO . . . . . . . . . . .  EB ADDR  008FH.0   A   
T0_CT. . . . . . . . . . . .  EB ADDR  0089H.2   A   
T0_GATE. . . . . . . . . . .  EB ADDR  0089H.3   A   
T0_M0. . . . . . . . . . . .  EB ADDR  0089H.0   A   
T0_M1. . . . . . . . . . . .  EB ADDR  0089H.1   A   
T0x12. . . . . . . . . . . .  EB ADDR  008EH.7   A   
T1CLKO . . . . . . . . . . .  EB ADDR  008FH.1   A   
T1_CT. . . . . . . . . . . .  EB ADDR  0089H.6   A   
T1_GATE. . . . . . . . . . .  EB ADDR  0089H.7   A   
T1_M0. . . . . . . . . . . .  EB ADDR  0089H.4   A   
T1_M1. . . . . . . . . . . .  EB ADDR  0089H.5   A   
T1x12. . . . . . . . . . . .  EB ADDR  008EH.6   A   
T2CLKO . . . . . . . . . . .  EB ADDR  008FH.2   A   
T2H. . . . . . . . . . . . .  D  ADDR  00D6H     A   
T2IF . . . . . . . . . . . .  EB ADDR  00EFH.0   A   
T2L. . . . . . . . . . . . .  D  ADDR  00D7H     A   
T2R. . . . . . . . . . . . .  EB ADDR  008EH.4   A   
T2_CT. . . . . . . . . . . .  EB ADDR  008EH.3   A   
T2x12. . . . . . . . . . . .  EB ADDR  008EH.2   A   
T3CLKO . . . . . . . . . . .  EB ADDR  00DDH.0   A   
T3H. . . . . . . . . . . . .  D  ADDR  00D4H     A   
T3IF . . . . . . . . . . . .  EB ADDR  00EFH.1   A   
T3L. . . . . . . . . . . . .  D  ADDR  00D5H     A   
T3R. . . . . . . . . . . . .  EB ADDR  00DDH.3   A   
A251 MACRO ASSEMBLER  port                                                                  21/09/22 22:20:49 PAGE    21

T3_CT. . . . . . . . . . . .  EB ADDR  00DDH.2   A   
T3x12. . . . . . . . . . . .  EB ADDR  00DDH.1   A   
T4CLKO . . . . . . . . . . .  EB ADDR  00DDH.4   A   
T4H. . . . . . . . . . . . .  D  ADDR  00D2H     A   
T4IF . . . . . . . . . . . .  EB ADDR  00EFH.2   A   
T4L. . . . . . . . . . . . .  D  ADDR  00D3H     A   
T4R. . . . . . . . . . . . .  EB ADDR  00DDH.7   A   
T4T3M. . . . . . . . . . . .  D  ADDR  00DDH     A   
T4_CT. . . . . . . . . . . .  EB ADDR  00DDH.6   A   
T4x12. . . . . . . . . . . .  EB ADDR  00DDH.5   A   
TA . . . . . . . . . . . . .  D  ADDR  00AEH     A   
TB8. . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TCON . . . . . . . . . . . .  D  ADDR  0088H     A   
TF0. . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1. . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TH0. . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1. . . . . . . . . . . . .  D  ADDR  008DH     A   
TI . . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TL0. . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1. . . . . . . . . . . . .  D  ADDR  008BH     A   
TMOD . . . . . . . . . . . .  D  ADDR  0089H     A   
TR0. . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1. . . . . . . . . . . . .  B  ADDR  0088H.6   A   
USBADR . . . . . . . . . . .  D  ADDR  00FCH     A   
USBCKS . . . . . . . . . . .  EB ADDR  009DH.7   A   
USBCKS2. . . . . . . . . . .  EB ADDR  009DH.6   A   
USBCLK . . . . . . . . . . .  D  ADDR  00DCH     A   
USBCON . . . . . . . . . . .  D  ADDR  00F4H     A   
USBDAT . . . . . . . . . . .  D  ADDR  00ECH     A   
USBRST . . . . . . . . . . .  EB ADDR  00F4H.6   A   
V33TRIM. . . . . . . . . . .  D  ADDR  00A3H     A   
VRTRIM . . . . . . . . . . .  D  ADDR  00A6H     A   
WCOL . . . . . . . . . . . .  EB ADDR  00CDH.6   A   
WDT_CONTR. . . . . . . . . .  D  ADDR  00C1H     A   
WDT_FLAG . . . . . . . . . .  EB ADDR  00C1H.7   A   
WKTCH. . . . . . . . . . . .  D  ADDR  00ABH     A   
WKTCL. . . . . . . . . . . .  D  ADDR  00AAH     A   
WTST . . . . . . . . . . . .  D  ADDR  00E9H     A   
Z. . . . . . . . . . . . . .  EB ADDR  00D1H.1   A   
port . . . . . . . . . . . .  -- ----  -------       
prvPortSetupTimerInterrupt?_  EC ADDR  0146H     R   SEG=?PR?PORT
pxCurrentTCB . . . . . . . .  ED ADDR  -------       EXT
pxPortInitialiseStack??. . .  EC ADDR  0000H     R   SEG=?PR?PORT
vPortEndScheduler??. . . . .  EC ADDR  008DH     R   SEG=?PR?PORT
vPortYield?? . . . . . . . .  EC ADDR  008EH     R   SEG=?PR?PORT
vTaskSwitchContext?? . . . .  EC ADDR  -------       EXT
vTimer0ISR?? . . . . . . . .  EC ADDR  00DAH     R   SEG=?PR?PORT
xPCB . . . . . . . . . . . .  D  ADDR  0000H     R   SEG=?DT?PORT
xPCH . . . . . . . . . . . .  D  ADDR  0001H     R   SEG=?DT?PORT
xPCL . . . . . . . . . . . .  D  ADDR  0002H     R   SEG=?DT?PORT
xPortStartScheduler??. . . .  EC ADDR  0062H     R   SEG=?PR?PORT
xTaskIncrementTick?? . . . .  EC ADDR  -------       EXT


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
