C251 COMPILER V5.60.0,  uart2_3                                                            21/09/22  15:15:39  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE uart2_3
OBJECT MODULE PLACED IN .\Objects\uart2_3.obj
COMPILER INVOKED BY: D:\SDK\Keil_V5\C251\BIN\C251.EXE Sources\User\uart2_3.c XSMALL OA FUNCTIONS(REENTRANT) BROWSE INCDI
                    -R(.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\STC32G12K128) DEBUG PRINT
                    -(.\Listings\uart2_3.lst) TABS(2) OBJECT(.\Objects\uart2_3.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* ���Ҫ�ڳ�����ʹ�ô˴���,���ڳ�����ע��ʹ����STC�����ϼ�����            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          
   14          /*************  ����˵��    **************
   15          
   16          �����̻���STC32GΪ����оƬ��ʵ����9���б�д����.
   17          
   18          �̽�ʵ�����ϵ�J7��J8���߽��в���.
   19          
   20          ����3��ʱ����һ�����ݸ�����2.
   21          
   22          ����2����Ӵ���3���յ�������.
   23          
   24          ������2�������ݣ�MCU�յ���Ӵ���2ԭ�����.
   25          
   26          ******************************************/
   27          
   28          #include "FreeRTOS.h"
   29          #include "task.h"
   30          
   31          #include "uart2_3.h"
   32          
   33          /****************************** �û������ ***********************************/
   34          
   35          #define Baudrate2   (65536 - MAIN_Fosc / 115200 / 4)
   36          #define Baudrate3   (65536 - MAIN_Fosc / 115200 / 4)
   37          
   38          #define UART2_BUF_LENGTH    64
   39          #define UART3_BUF_LENGTH    64
   40          
   41          bit B_TX2_Busy; //����æ��־
   42          bit B_TX3_Busy; //����æ��־
   43          uint8_t  TX2_Send;   //�ѷ�����
   44          uint8_t  TX2_Cnt;    //���ͼ���
   45          uint8_t  RX2_Cnt;    //���ռ���
   46          uint8_t  TX3_Send;   //�ѷ�����
   47          uint8_t  TX3_Cnt;    //���ͼ���
   48          uint8_t  RX3_Cnt;    //���ռ���
   49          uint8_t  RX2_TimeOut;
   50          uint8_t  RX3_TimeOut;
   51          
   52          uint8_t  TX2_Buffer[UART2_BUF_LENGTH]; //���ջ���
   53          uint8_t  RX2_Buffer[UART2_BUF_LENGTH]; //���ջ���
   54          uint8_t  TX3_Buffer[UART3_BUF_LENGTH]; //���ջ���
   55          uint8_t  RX3_Buffer[UART3_BUF_LENGTH]; //���ջ���
   56          
   57          uint16_t Sec_Cnt;    //1�����
C251 COMPILER V5.60.0,  uart2_3                                                            21/09/22  15:15:39  PAGE 2   

   58          
   59          void UART2_config(uint8_t brt);   // ѡ������, 2: ʹ��Timer2��������, ����ֵ: ��Ч.
   60          void UART3_config(uint8_t brt);   // ѡ������, 2: ʹ��Timer2��������, ����ֵ: ʹ��Timer3��������.
   61          void UART2_TxByte(uint8_t dat);
   62          void UART3_TxByte(uint8_t dat);
   63          void PrintString2(uint8_t *puts);
   64          void PrintString3(uint8_t *puts);
   65          
   66          /* RTC������ */
   67          portTASK_FUNCTION_PROTO( vUart2_3Task, pvParameters )
   68          {
   69   1          uint8_t i;
   70   1          
   71   1          Sec_Cnt = 0;
   72   1          UART2_config(2);    // ѡ������, 2: ʹ��Timer2��������, ����ֵ: ��Ч.
   73   1          UART3_config(3);    // ѡ������, 2: ʹ��Timer2��������, ����ֵ: ʹ��Timer3��������.
   74   1      
   75   1          PrintString2("STC32G UART2-UART3 Test Programme!\r\r\n");  //UART2����һ���ַ���
   76   1          PrintString3("STC32G UART3-UART2 Test Programme!\r\r\n");  //UART3����һ���ַ���
   77   1          while(1)
   78   1          {
   79   2              Sec_Cnt++;
   80   2              if(Sec_Cnt >= (uint16_t)pvParameters)
   81   2              {
   82   3                  Sec_Cnt = 0;
   83   3                  PrintString3("STC32G UART3-UART2 Test Programme!\r\r\n");  //UART3����һ���ַ���
   84   3              }
   85   2      
   86   2              if(RX2_TimeOut > 0)     //��ʱ����
   87   2              {
   88   3                  if(--RX2_TimeOut == 0)
   89   3                  {
   90   4                      for(i=0; i<RX2_Cnt; i++)    UART2_TxByte(RX2_Buffer[i]);    //���յ�������ͨ������2���
   91   4                      RX2_Cnt  = 0;   //����ֽ���
   92   4                  }
   93   3              }
   94   2              
   95   2              vTaskDelay(1);
   96   2          }
   97   1          
   98   1          vTaskDelete(NULL);
   99   1      }   
  100          
  101          //========================================================================
  102          // ����: void UART2_TxByte(uint8_t dat)
  103          // ����: ����һ���ֽ�.
  104          // ����: ��.
  105          // ����: ��.
  106          // �汾: V1.0, 2014-6-30
  107          //========================================================================
  108          void UART2_TxByte(uint8_t dat)
  109          {
  110   1        TX2_Buffer[TX2_Cnt] = dat;  //װ���ͻ���
  111   1        if(++TX2_Cnt >= UART2_BUF_LENGTH) TX2_Cnt = 0;
  112   1      
  113   1        if(B_TX2_Busy == 0)   //����
  114   1        {  
  115   2          B_TX2_Busy = 1;   //��־æ
  116   2          S2TI = 1;     //���������ж�
  117   2        }
  118   1      }
  119          
  120          //========================================================================
  121          // ����: void UART3_TxByte(uint8_t dat)
  122          // ����: ����һ���ֽ�.
  123          // ����: ��.
C251 COMPILER V5.60.0,  uart2_3                                                            21/09/22  15:15:39  PAGE 3   

  124          // ����: ��.
  125          // �汾: V1.0, 2014-6-30
  126          //========================================================================
  127          void UART3_TxByte(uint8_t dat)
  128          {
  129   1        TX3_Buffer[TX3_Cnt] = dat;  //װ���ͻ���
  130   1        if(++TX3_Cnt >= UART3_BUF_LENGTH) TX3_Cnt = 0;
  131   1      
  132   1        if(B_TX3_Busy == 0)   //����
  133   1        {  
  134   2          B_TX3_Busy = 1;   //��־æ
  135   2          S3TI = 1;     //���������ж�
  136   2        }
  137   1      }
  138          
  139          //========================================================================
  140          // ����: void PrintString2(uint8_t *puts)
  141          // ����: ����2�����ַ���������
  142          // ����: puts:  �ַ���ָ��.
  143          // ����: none.
  144          // �汾: VER1.0
  145          // ����: 2014-11-28
  146          // ��ע: 
  147          //========================================================================
  148          void PrintString2(uint8_t *puts)
  149          {
  150   1          for (; *puts != 0;  puts++)     //����ֹͣ��0����
  151   1          {
  152   2              UART2_TxByte(*puts);
  153   2          }
  154   1      }
  155          
  156          //========================================================================
  157          // ����: void PrintString3(uint8_t *puts)
  158          // ����: ����3�����ַ���������
  159          // ����: puts:  �ַ���ָ��.
  160          // ����: none.
  161          // �汾: VER1.0
  162          // ����: 2014-11-28
  163          // ��ע: 
  164          //========================================================================
  165          void PrintString3(uint8_t *puts)
  166          {
  167   1          for (; *puts != 0;  puts++)     //����ֹͣ��0����
  168   1          {
  169   2              UART3_TxByte(*puts);
  170   2          }
  171   1      }
  172          
  173          //========================================================================
  174          // ����: SetTimer2Baudraye(uint16_t dat)
  175          // ����: ����Timer2�������ʷ�������
  176          // ����: dat: Timer2����װֵ.
  177          // ����: none.
  178          // �汾: VER1.0
  179          // ����: 2014-11-28
  180          // ��ע: 
  181          //========================================================================
  182          void SetTimer2Baudraye(uint16_t dat)
  183          {
  184   1          T2R = 0;    //Timer stop
  185   1          T2_CT = 0;  //Timer2 set As Timer
  186   1          T2x12 = 1;  //Timer2 set as 1T mode
  187   1          T2H = (uint8_t)(dat / 256);
  188   1          T2L = (uint8_t)(dat % 256);
  189   1          ET2 = 0;    //��ֹ�ж�
C251 COMPILER V5.60.0,  uart2_3                                                            21/09/22  15:15:39  PAGE 4   

  190   1          T2R = 1;    //Timer run enable
  191   1      }
  192          
  193          //========================================================================
  194          // ����: void UART3_config(uint8_t brt)
  195          // ����: UART3��ʼ��������
  196          // ����: brt: ѡ������, 2: ʹ��Timer2��������, ����ֵ: ʹ��Timer3��������.
  197          // ����: none.
  198          // �汾: VER1.0
  199          // ����: 2014-11-28
  200          // ��ע: 
  201          //========================================================================
  202          void UART3_config(uint8_t brt)    // ѡ������, 2: ʹ��Timer2��������, ����ֵ: ʹ��Timer3��������.
  203          {
  204   1          if(brt == 2)
  205   1          {
  206   2              SetTimer2Baudraye((uint16_t)Baudrate3);
  207   2              S3CON = 0x10;       //8λ����, ʹ��Timer2�������ʷ�����, ��������
  208   2          }
  209   1          else
  210   1          {
  211   2              T3R = 0;    //Timer stop
  212   2              S3CON = 0x50;       //8λ����, ʹ��Timer3�������ʷ�����, ��������
  213   2              T3H = (uint8_t)(Baudrate3 / 256);
  214   2              T3L = (uint8_t)(Baudrate3 % 256);
  215   2              T3_CT = 0;  //Timer3 set As Timer
  216   2              T3x12 = 1;  //Timer3 set as 1T mode
  217   2              T3R = 1;    //Timer run enable
  218   2          }
  219   1          ES3  = 1;       //����UART3�ж�
  220   1          S3_S = 1;       //UART3 switch bit1 to: 0: P0.0 P0.1,  1: P5.0 P5.1
  221   1      
  222   1          B_TX3_Busy = 0;
  223   1          TX3_Send = 0;
  224   1          TX3_Cnt = 0;
  225   1          RX3_Cnt = 0;
  226   1      }
  227          
  228          //========================================================================
  229          // ����: void UART2_config(uint8_t brt)
  230          // ����: UART2��ʼ��������
  231          // ����: brt: ѡ������, 2: ʹ��Timer2��������, ����ֵ: ��Ч.
  232          // ����: none.
  233          // �汾: VER1.0
  234          // ����: 2014-11-28
  235          // ��ע: 
  236          //========================================================================
  237          void UART2_config(uint8_t brt)    // ѡ������, 2: ʹ��Timer2��������, ����ֵ: ��Ч.
  238          {
  239   1          if(brt == 2)
  240   1          {
  241   2              SetTimer2Baudraye((uint16_t)Baudrate2);
  242   2      
  243   2              S2CON = (S2CON & 0x3f) | 0x40;    //UART2ģʽ, 0x00: ͬ����λ���, 0x40: 8λ����,�ɱ䲨����, 0x80
             -: 9λ����,�̶�������, 0xc0: 9λ����,�ɱ䲨����
  244   2              ES2   = 1;         //�����ж�
  245   2              S2REN = 1;         //��������
  246   2              S2_S  = 1;         //UART2 switch to: 0: P1.0 P1.1,  1: P4.6 P4.7
  247   2      
  248   2              B_TX2_Busy = 0;
  249   2              TX2_Send = 0;
  250   2              TX2_Cnt = 0;
  251   2              RX2_Cnt = 0;
  252   2          }
  253   1      }
  254          
C251 COMPILER V5.60.0,  uart2_3                                                            21/09/22  15:15:39  PAGE 5   

  255          //========================================================================
  256          // ����: void UART2_int (void) interrupt UART2_VECTOR
  257          // ����: UART2�жϺ�����
  258          // ����: nine.
  259          // ����: none.
  260          // �汾: VER1.0
  261          // ����: 2014-11-28
  262          // ��ע: 
  263          //========================================================================
  264          void UART2_int (void) interrupt UART2_VECTOR
  265          {
  266   1          if(S2RI)
  267   1          {
  268   2              S2RI = 0;    //Clear Rx flag
  269   2              if(RX2_Cnt >= UART2_BUF_LENGTH)  RX2_Cnt = 0;
  270   2              RX2_Buffer[RX2_Cnt] = S2BUF;
  271   2              RX2_Cnt++;
  272   2              RX2_TimeOut = 5;
  273   2          }
  274   1      
  275   1          if(S2TI)
  276   1          {
  277   2              S2TI = 0;    //Clear Tx flag
  278   2              if(TX2_Send != TX2_Cnt)
  279   2              {
  280   3                  S2BUF = TX2_Buffer[TX2_Send];
  281   3                  if(++TX2_Send >= UART2_BUF_LENGTH)  TX2_Send = 0;
  282   3              }
  283   2              else
  284   2              {
  285   3                  B_TX2_Busy = 0;
  286   3              }
  287   2          }
  288   1      }
  289          
  290          //========================================================================
  291          // ����: void UART3_int (void) interrupt UART3_VECTOR
  292          // ����: UART3�жϺ�����
  293          // ����: nine.
  294          // ����: none.
  295          // �汾: VER1.0
  296          // ����: 2014-11-28
  297          // ��ע: 
  298          //========================================================================
  299          void UART3_int (void) interrupt UART3_VECTOR
  300          {
  301   1          if(S3RI)
  302   1          {
  303   2              S3RI = 0;    //Clear Rx flag
  304   2              RX3_Buffer[RX3_Cnt] = S3BUF;
  305   2              if(++RX3_Cnt >= UART3_BUF_LENGTH)   RX3_Cnt = 0;
  306   2              RX3_TimeOut = 5;
  307   2          }
  308   1      
  309   1          if(S3TI)
  310   1          {
  311   2              S3TI = 0;   //Clear Tx flag
  312   2              if(TX3_Send != TX3_Cnt)
  313   2              {
  314   3                  S3BUF = TX3_Buffer[TX3_Send];
  315   3                  if(++TX3_Send >= UART3_BUF_LENGTH)  TX3_Send = 0;
  316   3              }
  317   2              else
  318   2              {
  319   3                  B_TX3_Busy = 0;
  320   3              }
C251 COMPILER V5.60.0,  uart2_3                                                            21/09/22  15:15:39  PAGE 6   

  321   2          }
  322   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       678     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =       266     ------
  bit size             =         2     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        74     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
