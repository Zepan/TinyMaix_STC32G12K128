C251 COMPILER V5.60.0,  MatrixKey                                                          21/09/22  15:15:39  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE MatrixKey
OBJECT MODULE PLACED IN .\Objects\MatrixKey.obj
COMPILER INVOKED BY: D:\SDK\Keil_V5\C251\BIN\C251.EXE Sources\User\MatrixKey.c XSMALL OA FUNCTIONS(REENTRANT) BROWSE INC
                    -DIR(.\Sources\User;.\Sources\User\include;.\Sources\FreeRTOS\include;.\Sources\FreeRTOS\portable\STC32G12K128) DEBUG PRI
                    -NT(.\Listings\MatrixKey.lst) TABS(2) OBJECT(.\Objects\MatrixKey.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          
   14          /*************  功能说明    **************
   15          
   16          本例程基于STC32G为主控芯片的实验箱9进行编写测试.
   17          
   18          通过P5.4口输出低电平驱动有源蜂鸣器.
   19          
   20          行列扫描按键每个按键按下后蜂鸣器响一声.
   21          
   22          ******************************************/
   23          
   24          #include "FreeRTOS.h"
   25          #include "task.h"
   26          
   27          #include "MatrixKey.h"
   28          
   29          /****************************** 用户定义宏 ***********************************/
   30          
   31          sbit BEEP = P5^4;
   32          
   33          uint8_t cntms;
   34          uint8_t KeyCode;    //给用户使用的键码, 1~16有效
   35          uint8_t IO_KeyState, IO_KeyState1, IO_KeyHoldCnt;    //行列键盘变量
   36          
   37          void MatrixKeyScan(void);
   38          
   39          /* RTC任务函数 */
   40          portTASK_FUNCTION_PROTO( vMatrixKeyTask, pvParameters )
   41          {
   42   1          UNUSED( pvParameters );
   43   1          
   44   1          P5M1 &= ~0x10;   P5M0 |= 0x10;   //设置P5.4为推挽输出
   45   1          BEEP = 1;  //蜂鸣器关闭
   46   1          while(1)
   47   1          {
   48   2              if(cntms > 0)
   49   2              {
   50   3                  cntms--;
   51   3              }
   52   2              else
   53   2              {
   54   3                  BEEP = 1;    //蜂鸣器关闭
   55   3              }
   56   2      
   57   2              MatrixKeyScan();
C251 COMPILER V5.60.0,  MatrixKey                                                          21/09/22  15:15:39  PAGE 2   

   58   2              if(KeyCode > 0)  //有键按下
   59   2              {
   60   3                  KeyCode = 0;
   61   3                  BEEP = 0;    //蜂鸣器响起
   62   3                  cntms = 5;   //持续时间 5*50ms
   63   3              }
   64   2              
   65   2              vTaskDelay(50);
   66   2          }
   67   1          
   68   1          vTaskDelete(NULL);
   69   1      }   
   70          
   71          /*****************************************************
   72              行列键扫描程序
   73              使用XY查找4x4键的方法，只能单键，速度快
   74          
   75             Y     P04      P05      P06      P07
   76                    |        |        |        |
   77          X         |        |        |        |
   78          P00 ---- K00 ---- K01 ---- K02 ---- K03 ----
   79                    |        |        |        |
   80          P01 ---- K04 ---- K05 ---- K06 ---- K07 ----
   81                    |        |        |        |
   82          P02 ---- K08 ---- K09 ---- K10 ---- K11 ----
   83                    |        |        |        |
   84          P03 ---- K12 ---- K13 ---- K14 ---- K15 ----
   85                    |        |        |        |
   86          ******************************************************/
   87          
   88          uint8_t code T_KeyTable[16] = {0,1,2,0,3,0,0,0,4,0,0,0,0,0,0,0};
   89          
   90          void IO_KeyDelay(void)
   91          {
   92   1          uint8_t i;
   93   1          i = 60;
   94   1          while(--i)  ;
   95   1      }
   96          
   97          void MatrixKeyScan(void)    //50ms call
   98          {
   99   1          uint8_t  j;
  100   1      
  101   1          j = IO_KeyState1;   //保存上一次状态
  102   1      
  103   1          P0 = 0xf0;  //X低，读Y
  104   1          IO_KeyDelay();
  105   1          IO_KeyState1 = P0 & 0xf0;
  106   1      
  107   1          P0 = 0x0f;  //Y低，读X
  108   1          IO_KeyDelay();
  109   1          IO_KeyState1 |= (P0 & 0x0f);
  110   1          IO_KeyState1 ^= 0xff;   //取反
  111   1          
  112   1          if(j == IO_KeyState1)   //连续两次读相等
  113   1          {
  114   2              j = IO_KeyState;
  115   2              IO_KeyState = IO_KeyState1;
  116   2              if(IO_KeyState != 0)    //有键按下
  117   2              {
  118   3                  F0 = 0;
  119   3                  if(j == 0)  F0 = 1; //第一次按下
  120   3                  else if(j == IO_KeyState)
  121   3                  {
  122   4                      if(++IO_KeyHoldCnt >= 20)   //1秒后重键
  123   4                      {
C251 COMPILER V5.60.0,  MatrixKey                                                          21/09/22  15:15:39  PAGE 3   

  124   5                          IO_KeyHoldCnt = 18;
  125   5                          F0 = 1;
  126   5                      }
  127   4                  }
  128   3                  if(F0)
  129   3                  {
  130   4                      j = T_KeyTable[IO_KeyState >> 4];
  131   4                      if((j != 0) && (T_KeyTable[IO_KeyState& 0x0f] != 0)) 
  132   4                          KeyCode = (j - 1) * 4 + T_KeyTable[IO_KeyState & 0x0f] + 16;    //计算键码，17~32
  133   4                  }
  134   3              }
  135   2              else    IO_KeyHoldCnt = 0;
  136   2          }
  137   1          P0 = 0xff;
  138   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       317     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         5     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
